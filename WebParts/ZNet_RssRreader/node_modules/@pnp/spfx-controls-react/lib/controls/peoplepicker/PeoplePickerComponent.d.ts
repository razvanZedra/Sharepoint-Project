/// <reference types="react" />
import * as React from 'react';
import { IPeoplePickerProps, IPeoplePickerState } from './IPeoplePicker';
/**
* PeoplePicker component
*/
export declare class PeoplePicker extends React.Component<IPeoplePickerProps, IPeoplePickerState> {
    constructor(props: IPeoplePickerProps);
    /**
     * componentWillMount lifecycle hook
     */
    componentWillMount(): void;
    /**
     * componentDidUpdate lifecycle hook
     */
    componentDidUpdate(prevProps: IPeoplePickerProps, prevState: IPeoplePickerState): void;
    /**
     * Generate the user photo link
     *
     * @param value
     */
    private generateUserPhotoLink(value);
    /**
     * Retrieve the users for local demo and testing purposes
     */
    private _loadLocalWorkbenchUsers();
    /**
     * Retrieve the users
     */
    private _thisLoadUsers();
    /**
     * On persona item changed event
     */
    private _onPersonItemsChange;
    /**
     * Validates the user input
     *
     * @param input
     */
    private _validateInputPeople;
    /**
     * Returns the most recently used person
     *
     * @param currentPersonas
     */
    private _returnMostRecentlyUsedPerson;
    /**
     * On filter changed event
     *
     * @param filterText
     * @param currentPersonas
     * @param limitResults
     */
    private _onPersonFilterChanged;
    /**
     * Filter persons based on Name and Email (starting with and contains)
     *
     * @param filterText
     */
    private _filterPersons(filterText);
    /**
     * Removes duplicates
     *
     * @param personas
     * @param possibleDupes
     */
    private _removeDuplicates;
    /**
     * Checks if text starts with
     *
     * @param text
     * @param filterText
     */
    private _doesTextStartWith(text, filterText);
    /**
   * Checks if text contains
   *
   * @param text
   * @param filterText
   */
    private _doesTextContains(text, filterText);
    /**
     * Checks if list contains the person
     *
     * @param persona
     * @param personas
     */
    private _listContainsPersona;
    /**
     * Gets the default users based on the provided email address.
     * Adds emails that are not found with a random generated User Id
     *
     * @param userValuesArray
     * @param selectedUsers
     */
    private getDefaultUsers(userValuesArray, selectedUsers);
    /**
     * Filters Users based on email
     */
    private filterUsers;
    /**
     * Default React component render method
     */
    render(): React.ReactElement<IPeoplePickerProps>;
}
