{"version":3,"sources":["services/SPServiceFactory.ts"],"names":[],"mappings":";;AAGA,8DAA0E;AAC1E,iDAA4C;AAC5C,yCAAoC;AAEpC;IAAA;IAOA,CAAC;IANe,8BAAa,GAA3B,UAA4B,OAAsD,EAAE,YAAsB,EAAE,YAAqB;QAC/H,EAAE,CAAC,CAAC,6BAAW,CAAC,IAAI,KAAK,iCAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,uBAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QACvD,CAAC;QACD,MAAM,CAAC,IAAI,mBAAS,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IACH,uBAAC;AAAD,CAPA,AAOC,IAAA;AAPY,4CAAgB","file":"services/SPServiceFactory.js","sourcesContent":["import { ApplicationCustomizerContext } from '@microsoft/sp-application-base';\nimport { IWebPartContext, WebPartContext } from \"@microsoft/sp-webpart-base\";\nimport { ISPService } from \"./ISPService\";\nimport { Environment, EnvironmentType } from \"@microsoft/sp-core-library\";\nimport SPServiceMock from \"./SPServiceMock\";\nimport SPService from \"./SPService\";\n\nexport class SPServiceFactory {\n  public static createService(context: WebPartContext | ApplicationCustomizerContext, includeDelay?: boolean, delayTimeout?: number): ISPService {\n    if (Environment.type === EnvironmentType.Local) {\n      return new SPServiceMock(includeDelay, delayTimeout);\n    }\n    return new SPService(context);\n  }\n}\n"],"sourceRoot":"../../src"}