{"version":3,"sources":["propertyFields/collectionData/collectionDataItem/CollectionDataItem.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,8GAAoE;AAEpE,6EAA4E;AAC5E,mEAAkE;AAClE,mEAAkE;AAClE,2EAA0E;AAC1E,gDAAkD;AAClD,wBAAuF;AACvF,2EAA0E;AAC1E,yEAAyF;AACzF,8DAA6D;AAC7D,gEAAuE;AACvE,kEAAiE;AAEjE;IAAwC,sCAAmE;IAKzG,4BAAY,KAA+B;QAA3C,YACE,kBAAM,KAAK,CAAC,SAcb;QAnBO,eAAS,GAAQ,IAAI,CAAC;QACtB,gBAAU,GAAmB,EAAE,CAAC;QAiCxC;;WAEG;QACK,oBAAc,GAAG,UAAC,OAAe,EAAE,KAAU;YACnD,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAmC;gBACxC,IAAA,6BAAQ,CAAe;gBAC/B,2BAA2B;gBAC3B,QAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBAE1B,iCAAiC;gBACjC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC9B,EAAE,CAAC,CAAC,KAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC;wBAC1C,KAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;wBACzC,KAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC;gBAED,oCAAoC;gBACpC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,kCAAkC;gBAClC,MAAM,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAqDD;;WAEG;QACK,YAAM,GAAG;YACf,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChB,IAAA,+BAAQ,CAAgB;gBAChC,iDAAiD;gBACjD,EAAE,CAAC,CAAC,KAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC;oBAC1C,KAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;oBACzC,KAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC9B,yBAAyB;oBACzB,KAAI,CAAC,QAAQ,CAAC;wBACZ,QAAQ,eAAM,KAAI,CAAC,SAAS,CAAC;qBAC9B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC,CAAA;QAED;;WAEG;QACK,gBAAU,GAAG;YACX,IAAA,+BAAQ,CAAgB;YAChC,IAAM,OAAO,GAAG,KAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,sBAAsB,EAAE,CAAC;YAEzI,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3B,iDAAiD;gBACjD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACZ,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBACrD,CAAC;YACH,CAAC;YAED,kCAAkC;YAClC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAA;QAED;;WAEG;QACK,eAAS,GAAG;YAClB,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC,CAAA;QAED;;;;;WAKG;QACK,qBAAe,GAAG,UAAO,KAA6B,EAAE,KAAU;;;;;wBACpE,UAAU,GAAG,EAAE,CAAC;6BAEhB,KAAK,CAAC,iBAAiB,EAAvB,wBAAuB;wBACzB,+BAA+B;wBAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;wBAClC,uBAAuB;wBACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBAExB,qBAAM,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAA;;wBADxF,oBAAoB;wBACpB,UAAU,GAAG,SAA2E,CAAC;;;wBAE3F,6BAA6B;wBAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU,KAAK,EAAE,CAAC;wBAC9C,uBAAuB;wBACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBACrC,oCAAoC;wBACpC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;wBAC/C,sBAAO,UAAU,EAAC;;;aACnB,CAAA;QAmED;;WAEG;QACK,wBAAkB,GAAG;YAC3B,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAmC,IAAK,OAAA,CAAC;gBACtD,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW;aACpC,CAAC,EAFqD,CAErD,CAAC,CAAC;QACN,CAAC,CAAA;QAEO,sBAAgB,GAAG;YACzB,KAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,KAAK;aACnB,CAAC,CAAC;QACL,CAAC,CAAA;QApQC,2CAA2C;QAC3C,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,GAAG,CAAC,CAAgB,UAAiB,EAAjB,KAAA,KAAI,CAAC,KAAK,CAAC,MAAM,EAAjB,cAAiB,EAAjB,IAAiB;YAAhC,IAAM,KAAK,SAAA;YACd,gDAAgD;YAChD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC;SACvD;QAED,KAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,wBAAK,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAQ,KAAI,CAAC,SAAS,CAAC;YACvD,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,KAAK;SACnB,CAAC;;IACJ,CAAC;IAED;;;;OAIG;IACI,+CAAkB,GAAzB,UAA0B,SAAmC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE,wBAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aACjC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAgCD;;OAEG;IACK,wDAA2B,GAAnC,UAAoC,IAAS;QAC3C,8BAA8B;QAC9B,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;QACjE,sCAAsC;QACtC,GAAG,CAAC,CAAgB,UAAc,EAAd,iCAAc,EAAd,4BAAc,EAAd,IAAc;YAA7B,IAAM,KAAK,uBAAA;YACd,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC9F,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACK,uDAA0B,GAAlC,UAAmC,IAAS;QAClC,IAAA,0BAAM,CAAgB;QAC9B,GAAG,CAAC,CAAgB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;YAArB,IAAM,KAAK,eAAA;YACd,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC9F,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,uCAAU,GAAlB,UAAmB,IAAS;QAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IACrJ,CAAC;IAED;;OAEG;IACK,mDAAsB,GAA9B;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1C,GAAG,CAAC,CAAc,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG,aAAA;gBACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;aACF;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IA4ED;;;;;OAKG;IACK,gDAAmB,GAA3B,UAA4B,OAAe,EAAE,OAAe;QAA5D,iBAyDC;QAxDC,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAmC;YAC1C,IAAA,6BAAQ,EAAE,+BAAS,CAAe;YAExC,wBAAwB;YACxB,IAAM,QAAQ,GAAG,4BAAS,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,OAAO,EAAhB,CAAgB,CAAC,CAAC;YACrE,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC;YACT,CAAC;YACD,IAAM,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE1C,oDAAoD;YACpD,IAAM,WAAW,GAAG,4BAAS,CAAC,SAAS,EAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAzB,CAAyB,CAAC,CAAC;YAE3E,cAAc;YACd,IAAI,QAAQ,CAAC;YACb,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,QAAQ,GAAG;oBACT,KAAK,EAAE,KAAK,CAAC,KAAK;oBAClB,OAAO,EAAE,OAAO;iBACjB,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,iBAAiB;gBACjB,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC7B,CAAC;YACH,CAAC;YAED,oDAAoD;YACpD,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,WAAW,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC1G,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC9B,CAAC;YACH,CAAC;YAED,iEAAiE;YACjE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9C,kBAAkB;gBAClB,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC;YAED,0BAA0B;YAC1B,SAAS,GAAG,yBAAM,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YAEzC,MAAM,CAAC;gBACL,SAAS,WAAA;aACV,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAiBD;;;;;OAKG;IACK,wCAAW,GAAnB,UAAoB,KAA6B,EAAE,IAAS;QAA5D,iBA6DC;QA5DC,MAAM,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,KAAK,6BAAyB,CAAC,OAAO;gBACpC,MAAM,CAAC,oBAAC,mBAAQ,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,EAChD,QAAQ,EAAE,UAAC,EAAE,EAAE,KAAK,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAApC,CAAoC,GAAI,CAAC;YACrF,KAAK,6BAAyB,CAAC,QAAQ;gBACrC,MAAM,CAAC,oBAAC,mBAAQ,IAAC,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,EAC7C,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,EACnC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAtC,CAAsC,EAC1D,cAAc,EAAE,KAAK,CAAC,cAAc,GAAI,CAAC;YAC5D,KAAK,6BAAyB,CAAC,MAAM;gBACnC,MAAM,CAAC,CACL,oBAAC,6CAAqB,IAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,GAAI,CAC5H,CAAC;YACJ,KAAK,6BAAyB,CAAC,UAAU;gBACvC,MAAM,CAAC,CACL,oBAAC,yCAAmB,IAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,GAAI,CAC1H,CAAC;YACJ,KAAK,6BAAyB,CAAC,GAAG;gBAChC,MAAM,CAAC,oBAAC,qBAAS,IAAC,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,EAC7C,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAC3C,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,qDAAM,CAAC,mBAAmB,EACrC,sBAAsB,EAAE,KAAK,CAAC,sBAAsB,IAAI,KAAK,CAAC,sBAAsB,IAAI,CAAC,GAAG,KAAK,CAAC,sBAAsB,GAAG,GAAG,EAC9H,iBAAiB,EAAE,UAAO,KAAK;;;;;oCACzB,OAAO,GAAG,IAAI,CAAC;oCACf,UAAU,GAAG,EAAE,CAAC;yCAGhB,KAAK,CAAC,iBAAiB,EAAvB,wBAAuB;oCAEZ,qBAAM,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAA;;oCADzE,8BAA8B;oCAC9B,UAAU,GAAG,SAA4D,CAAC;oCAC1E,OAAO,GAAG,UAAU,KAAK,EAAE,CAAC;;;oCAGtB,KAAK,GAAW,sGAAsG,CAAC;oCAC7H,OAAO,GAAG,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oCACtE,UAAU,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC;;;oCAGtD,6BAA6B;oCAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;oCACpC,uBAAuB;oCACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;oCACrC,oCAAoC;oCACpC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;oCAC/C,qCAAqC;oCACrC,sBAAO,UAAU,EAAC;;;yBACnB,GAAI,CAAC;YAC1B,KAAK,6BAAyB,CAAC,MAAM,CAAC;YACtC;gBACE,MAAM,CAAC,oBAAC,qBAAS,IAAC,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,EAC7C,SAAS,EAAE,qDAAM,CAAC,mBAAmB,EACrC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAC3C,QAAQ,EAAE,KAAK,CAAC,QAAQ;oBACxB,8DAA8D;oBAC9D,sBAAsB,EAAE,KAAK,CAAC,sBAAsB,IAAI,KAAK,CAAC,sBAAsB,IAAI,CAAC,GAAG,KAAK,CAAC,sBAAsB,GAAG,GAAG,EAC9H,iBAAiB,EAAE,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,EAAlC,CAAkC,GAAI,CAAC;QACnG,CAAC;IACH,CAAC;IAED;;OAEG;IACI,mCAAM,GAAb;QAAA,iBAgEC;QA/DS,IAAA,8BAAQ,CAAgB;QAEhC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAK,qDAAM,CAAC,QAAQ,UAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,qDAAM,CAAC,WAAW,GAAG,EAAE,CAAE;YAEvF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CACzB,8BAAM,SAAS,EAAK,qDAAM,CAAC,SAAS,SAAI,qDAAM,CAAC,UAAY,IAAG,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAQ,CACpG,EAF0B,CAE1B,CAAC;YAGJ,8BAAM,SAAS,EAAE,qDAAM,CAAC,SAAS;gBAC/B,8BAAM,GAAG,EAAE,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,GAAG,EAAzB,CAAyB;oBACzC,oBAAC,WAAI,IAAC,KAAK,EAAE,OAAO,CAAC,iCAAiC,EAChD,SAAS,EAAE,qDAAM,CAAC,gBAAgB,EAClC,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EACpE,OAAO,EAAE,IAAI,CAAC,kBAAkB;wBACpC,oBAAC,WAAI,IAAC,QAAQ,EAAC,OAAO,GAAG,CACpB,CACF;gBAGL,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CACxB,oBAAC,iBAAO,IAAC,SAAS,EAAE,qDAAM,CAAC,YAAY,EAC9B,MAAM,EAAE,IAAI,CAAC,cAAc,EAC3B,aAAa,EAAE,IAAI,EACnB,eAAe,EAAE,yBAAe,CAAC,cAAc,EAC/C,qBAAqB,EAAE,yBAAe,CAAC,eAAe,EACtD,SAAS,EAAE,IAAI,CAAC,gBAAgB,IAErC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAC3D,6BAAK,SAAS,EAAE,qDAAM,CAAC,SAAS;oBAC9B,+CAAoB;oBACpB,gCAEI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAC9B;wBAAI,+BAAI,GAAG,CAAC,KAAK,CAAK;;wBAAG,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,oCAAoC,GAAG,IAAI,CAAM,CAChI,EAF+B,CAE/B,CAAC,CAED,CACD,CACP,CAEK,CACX,CAEE;YAEP,8BAAM,SAAS,EAAE,qDAAM,CAAC,SAAS;YAE/B,gCAAgC;YAChC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,CAC1B,oBAAC,WAAI,IAAC,KAAK,EAAE,OAAO,CAAC,8BAA8B,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS;gBAC7G,oBAAC,WAAI,IAAC,QAAQ,EAAC,OAAO,GAAG,CACpB,CACR,GAAG,CACF,oBAAC,WAAI,IAAC,KAAK,EAAE,OAAO,CAAC,2BAA2B,EAAE,SAAS,EAAE,MAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,qDAAM,CAAC,MAAM,CAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM;gBACzK,oBAAC,WAAI,IAAC,QAAQ,EAAC,KAAK,GAAG,CAClB,CACR,CAEI,CACH,CACP,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAvZA,AAuZC,CAvZuC,KAAK,CAAC,SAAS,GAuZtD;AAvZY,gDAAkB","file":"propertyFields/collectionData/collectionDataItem/CollectionDataItem.js","sourcesContent":["import * as React from 'react';\nimport styles from '../PropertyFieldCollectionDataHost.module.scss';\nimport { ICollectionDataItemProps, ICollectionDataItemState } from '.';\nimport { TextField } from 'office-ui-fabric-react/lib/components/TextField';\nimport { Icon } from 'office-ui-fabric-react/lib/components/Icon';\nimport { Link } from 'office-ui-fabric-react/lib/components/Link';\nimport { Checkbox } from 'office-ui-fabric-react/lib/components/Checkbox';\nimport * as strings from 'PropertyControlStrings';\nimport { ICustomCollectionField, CustomCollectionFieldType, FieldValidator } from '..';\nimport { Dropdown } from 'office-ui-fabric-react/lib/components/Dropdown';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/components/Callout';\nimport { CollectionIconField } from '../collectionIconField';\nimport { clone, findIndex, sortBy } from '@microsoft/sp-lodash-subset';\nimport { CollectionNumberField } from '../collectionNumberField';\n\nexport class CollectionDataItem extends React.Component<ICollectionDataItemProps, ICollectionDataItemState> {\n  private emptyItem: any = null;\n  private validation: FieldValidator = {};\n  private calloutCellRef: HTMLElement;\n\n  constructor(props: ICollectionDataItemProps) {\n    super(props);\n\n    // Create an empty item with all properties\n    this.emptyItem = {};\n    for (const field of this.props.fields) {\n      // Assign default value or null to the emptyItem\n      this.emptyItem[field.id] = field.defaultValue || null;\n    }\n\n    this.state = {\n      crntItem: clone(this.props.item) || {...this.emptyItem},\n      errorMsgs: [],\n      showCallout: false\n    };\n  }\n\n  /**\n   * componentDidUpdate lifecycle hook\n   * @param prevProps\n   * @param prevState\n   */\n  public componentDidUpdate(prevProps: ICollectionDataItemProps): void {\n    if (this.props.item !== prevProps.item) {\n      this.setState({\n        crntItem: clone(this.props.item)\n      });\n    }\n  }\n\n  /**\n   * Update the item value on the field change\n   */\n  private onValueChanged = (fieldId: string, value: any): void => {\n    this.setState((prevState: ICollectionDataItemState): ICollectionDataItemState => {\n      const { crntItem } = prevState;\n      // Update the changed field\n      crntItem[fieldId] = value;\n\n      // Check if current item is valid\n      if (this.props.fAddInCreation) {\n        if (this.checkAllRequiredFieldsValid(crntItem) &&\n            this.checkAnyFieldContainsValue(crntItem) &&\n            this.checkAllFieldsAreValid()) {\n          this.props.fAddInCreation(crntItem);\n        } else {\n          this.props.fAddInCreation(null);\n        }\n      }\n\n      // Check if item needs to be updated\n      if (this.props.fUpdateItem) {\n        this.updateItem();\n      }\n\n      // Store this in the current state\n      return { crntItem };\n    });\n  }\n\n  /**\n   * Check if all values of the required fields are provided\n   */\n  private checkAllRequiredFieldsValid(item: any): boolean {\n    // Get all the required fields\n    const requiredFields = this.props.fields.filter(f => f.required);\n    // Check all the required field values\n    for (const field of requiredFields) {\n      if (typeof item[field.id] === \"undefined\" || item[field.id] === null || item[field.id] === \"\") {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if any of the fields contain a value\n   * @param item\n   */\n  private checkAnyFieldContainsValue(item: any): boolean {\n    const { fields } = this.props;\n    for (const field of fields) {\n      if (typeof item[field.id] !== \"undefined\" && item[field.id] !== null && item[field.id] !== \"\") {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the add action needs to be disabled\n   */\n  private disableAdd(item: any) {\n    return !this.checkAllRequiredFieldsValid(item) || !this.checkAnyFieldContainsValue(item) || !this.checkAllFieldsAreValid() || !this.props.fAddItem;\n  }\n\n  /**\n   * Checks if all fields are valid\n   */\n  private checkAllFieldsAreValid(): boolean {\n    if (this.validation) {\n      const keys = Object.keys(this.validation);\n      for (const key of keys) {\n        if (!this.validation[key]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Add the current row to the collection\n   */\n  private addRow = () => {\n    if (this.props.fAddItem) {\n      const { crntItem } = this.state;\n      // Check if all the fields are correctly provided\n      if (this.checkAllRequiredFieldsValid(crntItem) &&\n          this.checkAnyFieldContainsValue(crntItem) &&\n          this.checkAllFieldsAreValid()) {\n        this.props.fAddItem(crntItem);\n        // Clear all field values\n        this.setState({\n          crntItem: {...this.emptyItem}\n        });\n      }\n    }\n  }\n\n  /**\n   * Add the current row to the collection\n   */\n  private updateItem = () => {\n    const { crntItem } = this.state;\n    const isValid = this.checkAllRequiredFieldsValid(crntItem) && this.checkAnyFieldContainsValue(crntItem) && this.checkAllFieldsAreValid();\n\n    if (this.props.fUpdateItem) {\n      // Check if all the fields are correctly provided\n      if (isValid) {\n        this.props.fUpdateItem(this.props.index, crntItem);\n      }\n    }\n\n    // Set the validation for the item\n    if (this.props.fValidation) {\n      this.props.fValidation(this.props.index, isValid);\n    }\n  }\n\n  /**\n   * Delete the item from the collection\n   */\n  private deleteRow = () => {\n    if (this.props.fDeleteItem) {\n      this.props.fDeleteItem(this.props.index);\n    }\n  }\n\n  /**\n   * Allow custom field validation\n   *\n   * @param field\n   * @param value\n   */\n  private fieldValidation = async (field: ICustomCollectionField, value: any): Promise<string> => {\n    let validation = \"\";\n    // Do the custom validation check\n    if (field.onGetErrorMessage) {\n      // Set initial field validation\n      this.validation[field.id] = false;\n      // Trigger field change\n      this.onValueChanged(field.id, value);\n      // Do the validation\n      validation = await field.onGetErrorMessage(value, this.props.index, this.state.crntItem);\n    }\n    // Store the field validation\n    this.validation[field.id] = validation === \"\";\n    // Trigger field change\n    this.onValueChanged(field.id, value);\n    // Add message for the error callout\n    this.errorCalloutHandler(field.id, validation);\n    return validation;\n  }\n\n  /**\n   * Error callout message handler\n   *\n   * @param field\n   * @param message\n   */\n  private errorCalloutHandler(fieldId: string, message: string) {\n    this.setState((prevState: ICollectionDataItemState) => {\n      let { crntItem, errorMsgs } = prevState;\n\n      // Get the current field\n      const fieldIdx = findIndex(this.props.fields, f => f.id === fieldId);\n      if (fieldIdx === -1) {\n        return;\n      }\n      const field = this.props.fields[fieldIdx];\n\n      // Check if there already is a message for the field\n      const fieldMsgIdx = findIndex(errorMsgs, msg => msg.field === field.title);\n\n      // Add message\n      let fieldMsg;\n      if (fieldMsgIdx === -1) {\n        fieldMsg = {\n          field: field.title,\n          message: message\n        };\n      } else {\n        // Update message\n        fieldMsg = errorMsgs[fieldMsgIdx];\n        if (fieldMsg) {\n          fieldMsg.message = message;\n        }\n      }\n\n      // Check if field required message needs to be shown\n      if (field.required) {\n        if (typeof crntItem[field.id] === \"undefined\" || crntItem[field.id] === null || crntItem[field.id] === \"\") {\n          fieldMsg.isRequired = true;\n        } else {\n          fieldMsg.isRequired = false;\n        }\n      }\n\n      // If required and message are false, it doesn't need to be added\n      if (!fieldMsg.message && !fieldMsg.isRequired) {\n        // Remove the item\n        if (fieldMsgIdx !== -1) {\n          errorMsgs.splice(fieldMsgIdx, 1);\n        }\n      } else {\n        if (fieldMsgIdx === -1) {\n          errorMsgs.push(fieldMsg);\n        }\n      }\n\n      // Sort based on the index\n      errorMsgs = sortBy(errorMsgs, [\"field\"]);\n\n      return {\n        errorMsgs\n      };\n    });\n  }\n\n  /**\n   * Toggle the error callout\n   */\n  private toggleErrorCallout = () => {\n    this.setState((prevState: ICollectionDataItemState) => ({\n      showCallout: !prevState.showCallout\n    }));\n  }\n\n  private hideErrorCallout = () => {\n    this.setState({\n      showCallout: false\n    });\n  }\n\n  /**\n   * Render the field\n   *\n   * @param field\n   * @param item\n   */\n  private renderField(field: ICustomCollectionField, item: any) {\n    switch(field.type) {\n      case CustomCollectionFieldType.boolean:\n        return <Checkbox checked={item[field.id] ? item[field.id] : false}\n                         onChange={(ev, value) => this.onValueChanged(field.id, value)} />;\n      case CustomCollectionFieldType.dropdown:\n        return <Dropdown placeHolder={field.placeholder || field.title}\n                         options={field.options}\n                         selectedKey={item[field.id] || null}\n                         required={field.required}\n                         onChanged={(opt) => this.onValueChanged(field.id, opt.key)}\n                         onRenderOption={field.onRenderOption} />;\n      case CustomCollectionFieldType.number:\n        return (\n          <CollectionNumberField field={field} item={item} fOnValueChange={this.onValueChanged} fValidation={this.fieldValidation} />\n        );\n      case CustomCollectionFieldType.fabricIcon:\n        return (\n          <CollectionIconField field={field} item={item} fOnValueChange={this.onValueChanged} fValidation={this.fieldValidation} />\n        );\n      case CustomCollectionFieldType.url:\n        return <TextField placeholder={field.placeholder || field.title}\n                          value={item[field.id] ? item[field.id] : \"\"}\n                          required={field.required}\n                          className={styles.collectionDataField}\n                          deferredValidationTime={field.deferredValidationTime || field.deferredValidationTime >= 0 ? field.deferredValidationTime : 200}\n                          onGetErrorMessage={async (value) => {\n                            let isValid = true;\n                            let validation = \"\";\n\n                            // Check if custom validation is configured\n                            if (field.onGetErrorMessage) {\n                              // Using the custom validation\n                              validation = await field.onGetErrorMessage(value, this.props.index, item);\n                              isValid = validation === \"\";\n                            } else {\n                              // Check if entered value is a valid URL\n                              const regEx: RegExp = /(http|https)?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/\\/=]*)/;\n                              isValid = (value === null || value.length === 0 || regEx.test(value));\n                              validation = isValid ? \"\" : strings.InvalidUrlError;\n                            }\n\n                            // Store the field validation\n                            this.validation[field.id] = isValid;\n                            // Trigger field change\n                            this.onValueChanged(field.id, value);\n                            // Add message for the error callout\n                            this.errorCalloutHandler(field.id, validation);\n                            // Return the error message if needed\n                            return validation;\n                          }} />;\n      case CustomCollectionFieldType.string:\n      default:\n        return <TextField placeholder={field.placeholder || field.title}\n                          className={styles.collectionDataField}\n                          value={item[field.id] ? item[field.id] : \"\"}\n                          required={field.required}\n                          // onChanged={(value) => this.onValueChanged(field.id, value)}\n                          deferredValidationTime={field.deferredValidationTime || field.deferredValidationTime >= 0 ? field.deferredValidationTime : 200}\n                          onGetErrorMessage={(value: string) => this.fieldValidation(field, value)} />;\n    }\n  }\n\n  /**\n   * Default React render\n   */\n  public render(): React.ReactElement<ICollectionDataItemProps> {\n    const { crntItem } = this.state;\n\n    return (\n      <div className={`${styles.tableRow} ${this.props.index === null ? styles.tableFooter : \"\"}`}>\n        {\n          this.props.fields.map(f => (\n            <span className={`${styles.tableCell} ${styles.inputField}`}>{this.renderField(f, crntItem)}</span>\n          ))\n        }\n\n        <span className={styles.tableCell}>\n          <span ref={ref => this.calloutCellRef = ref}>\n            <Link title={strings.CollectionDataItemShowErrorsLabel}\n                  className={styles.errorCalloutLink}\n                  disabled={!this.state.errorMsgs || this.state.errorMsgs.length === 0}\n                  onClick={this.toggleErrorCallout}>\n              <Icon iconName=\"Error\" />\n            </Link>\n          </span>\n\n          {\n            this.state.showCallout && (\n              <Callout className={styles.errorCallout}\n                       target={this.calloutCellRef}\n                       isBeakVisible={true}\n                       directionalHint={DirectionalHint.bottomLeftEdge}\n                       directionalHintForRTL={DirectionalHint.rightBottomEdge}\n                       onDismiss={this.hideErrorCallout}>\n                {\n                  (this.state.errorMsgs && this.state.errorMsgs.length > 0) && (\n                    <div className={styles.errorMsgs}>\n                      <p>Field issues:</p>\n                      <ul>\n                        {\n                          this.state.errorMsgs.map(msg => (\n                            <li><b>{msg.field}</b>: {msg.message ? msg.message : msg.isRequired ? strings.CollectionDataItemFieldRequiredLabel : null}</li>\n                          ))\n                        }\n                      </ul>\n                    </div>\n                  )\n                }\n              </Callout>\n            )\n          }\n        </span>\n\n        <span className={styles.tableCell}>\n        {\n          /* Check add or delete action */\n          this.props.index !== null ? (\n            <Link title={strings.CollectionDeleteRowButtonLabel} disabled={!this.props.fDeleteItem} onClick={this.deleteRow}>\n              <Icon iconName=\"Clear\" />\n            </Link>\n          ) : (\n            <Link title={strings.CollectionAddRowButtonLabel} className={`${this.disableAdd(crntItem) ? \"\" : styles.addBtn}`} disabled={this.disableAdd(crntItem)} onClick={this.addRow}>\n              <Icon iconName=\"Add\" />\n            </Link>\n          )\n        }\n        </span>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../src"}