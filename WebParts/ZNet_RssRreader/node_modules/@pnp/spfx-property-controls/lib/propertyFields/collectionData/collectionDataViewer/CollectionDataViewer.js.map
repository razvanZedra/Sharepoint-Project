{"version":3,"sources":["propertyFields/collectionData/collectionDataViewer/CollectionDataViewer.tsx"],"names":[],"mappings":"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","file":"propertyFields/collectionData/collectionDataViewer/CollectionDataViewer.js","sourcesContent":["import * as React from 'react';\nimport styles from '../PropertyFieldCollectionDataHost.module.scss';\nimport { ICollectionDataViewerProps, ICollectionDataViewerState } from '.';\nimport { CollectionDataItem } from '../collectionDataItem';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\nimport { Icon } from 'office-ui-fabric-react/lib/components/Icon';\nimport * as strings from 'PropertyControlStrings';\nimport { cloneDeep } from '@microsoft/sp-lodash-subset';\n\nexport class CollectionDataViewer extends React.Component<ICollectionDataViewerProps, ICollectionDataViewerState> {\n  constructor(props: ICollectionDataViewerProps) {\n    super(props);\n\n    this.state = {\n      crntItems: [],\n      inCreationItem: null,\n      validation: {}\n    };\n  }\n\n  /**\n   * componentDidMount lifecycle hook\n   */\n  public componentDidMount(): void {\n    this.setState({\n      crntItems: this.props.value ? cloneDeep(this.props.value) : []\n    });\n  }\n\n  /**\n   * Add a new item to the collection\n   */\n  private addItem = (item: any) => {\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => ({\n      crntItems: [...prevState.crntItems, item],\n      inCreationItem: null\n    }));\n  }\n\n  /**\n   * Remove an item from the collection\n   */\n  private updateItem = (idx: number, item: any) => {\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => {\n      const { crntItems } = prevState;\n      // Update the item in the array\n      crntItems[idx] = item;\n      return { crntItems };\n    });\n  }\n\n  /**\n   * Remove an item from the collection\n   */\n  private deleteItem = (idx: number) => {\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => {\n      const { crntItems } = prevState;\n      crntItems.splice(idx, 1);\n      return { crntItems };\n    });\n  }\n\n  /**\n   * Validate every item\n   */\n  private validateItem = (idx: number, isValid: boolean) => {\n    this.setState((prevState: ICollectionDataViewerState) => {\n      const { validation } = prevState;\n      validation[idx] = isValid;\n      return {\n        validation: prevState.validation\n      };\n    });\n  }\n\n  /**\n   * Check if all items are valid\n   */\n  private allItemsValid() {\n    const { validation } = this.state;\n    if (validation) {\n      const keys = Object.keys(validation);\n      for (const key of keys) {\n        if (!validation[key]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Currently in creation\n   */\n  private addInCreation = (item: any) => {\n    this.setState({\n      inCreationItem: item\n    });\n  }\n\n  /**\n   * Add the item and save the form\n   */\n  private addAndSave = () => {\n    // Check if the item is not empty\n    if (this.state.inCreationItem) {\n      this.props.fOnSave([...this.state.crntItems, this.state.inCreationItem]);\n    } else {\n      this.onSave();\n    }\n  }\n\n  /**\n   * Save the collection data\n   */\n  private onSave = () => {\n    this.props.fOnSave(this.state.crntItems);\n  }\n\n  /**\n   * Cancel\n   */\n  private onCancel = () => {\n    this.props.fOnClose();\n  }\n\n  /**\n   * Default React render\n   */\n  public render(): React.ReactElement<ICollectionDataViewerProps> {\n    return (\n      <div>\n        <div className={styles.table}>\n          <div className={`${styles.tableRow} ${styles.tableHead}`}>\n            {\n              this.props.fields.map(f => (\n                <span className={styles.tableCell}>{f.title} { f.required && <Icon className={styles.required} iconName=\"Asterisk\" /> }</span>\n              ))\n            }\n            <span className={styles.tableCell}></span>\n            <span className={styles.tableCell}></span>\n          </div>\n          {\n            (this.state.crntItems && this.state.crntItems.length > 0) && (\n              this.state.crntItems.map((item, idx) => (\n                <CollectionDataItem key={idx}\n                                    fields={this.props.fields}\n                                    index={idx}\n                                    item={item}\n                                    fUpdateItem={this.updateItem}\n                                    fDeleteItem={this.deleteItem}\n                                    fValidation={this.validateItem} />\n              ))\n            )\n          }\n          <CollectionDataItem fields={this.props.fields}\n                              index={null}\n                              item={null}\n                              fAddItem={this.addItem}\n                              fAddInCreation={this.addInCreation} />\n        </div>\n\n        {\n          (!this.state.crntItems || this.state.crntItems.length === 0) && (\n            <p className={styles.noCollectionData}>{strings.CollectionDataEmptyValue}</p>\n          )\n        }\n\n        <div className={styles.panelActions}>\n          { this.state.inCreationItem && <PrimaryButton text={strings.CollectionSaveAndAddButtonLabel} onClick={this.addAndSave} disabled={!this.allItemsValid()} /> }\n          { !this.state.inCreationItem && <PrimaryButton text={strings.SaveButtonLabel} onClick={this.onSave} disabled={!this.allItemsValid()} /> }\n          <DefaultButton text={strings.CancelButtonLabel} onClick={this.onCancel} />\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../src"}