{"version":3,"file":"ApiDefinitionReference.js","sourceRoot":"","sources":["../src/ApiDefinitionReference.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,oEAA2D;AAqC3D;;GAEG;AACH;IAkBE;;;OAGG;IACI,MAAM,CAAC,eAAe,CAAC,KAAmC;QAC/D,MAAM,CAAC,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,CAAC,+BAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACpE,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,IAAI,MAAM,GAAW,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,MAAM,IAAI,GAAG,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;IACvD,CAAC;IAEM,kBAAkB;QACvB,MAAM,CAAC;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC;IACJ,CAAC;IAED,YAAoB,KAAmC;QACrD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IACrC,CAAC;CACF;AA9ED,wDA8EC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { PackageName } from '@microsoft/node-core-library';\r\nimport { IApiItemReference } from './api/ApiItem';\r\n\r\n/**\r\n * An API definition reference that is used to locate the documentation of exported\r\n * API items that may or may not belong to an external package.\r\n *\r\n * The format of the API definition reference is:\r\n * scopeName/packageName:exportName.memberName\r\n *\r\n * The following are valid API definition references:\r\n * \\@microsoft/sp-core-library:DisplayMode\r\n * \\@microsoft/sp-core-library:Guid\r\n * \\@microsoft/sp-core-library:Guid.equals\r\n * es6-collections:Map\r\n */\r\nexport interface IApiDefinitionReferenceParts {\r\n  /**\r\n   * This is an optional property to denote that a package name is scoped under this name.\r\n   * For example, a common case is when having the '@microsoft' scope name in the\r\n   * API definition reference: '\\@microsoft/sp-core-library'.\r\n   */\r\n  scopeName: string;\r\n  /**\r\n   * The name of the package that the exportName belongs to.\r\n   */\r\n  packageName: string;\r\n  /**\r\n   * The name of the export API item.\r\n   */\r\n  exportName: string;\r\n  /**\r\n   * The name of the member API item.\r\n   */\r\n  memberName: string;\r\n}\r\n\r\n/**\r\n * {@inheritdoc IApiDefinitionReferenceParts}\r\n */\r\nexport class ApiDefinitionReference {\r\n  /**\r\n   * {@inheritdoc IApiDefinitionReferenceParts.scopeName}\r\n   */\r\n  public scopeName: string;\r\n  /**\r\n   * {@inheritdoc IApiDefinitionReferenceParts.packageName}\r\n   */\r\n  public packageName: string;\r\n  /**\r\n   * {@inheritdoc IApiDefinitionReferenceParts.exportName}\r\n   */\r\n  public exportName: string;\r\n  /**\r\n   * {@inheritdoc IApiDefinitionReferenceParts.memberName}\r\n   */\r\n  public memberName: string;\r\n\r\n  /**\r\n   * Creates an ApiDefinitionReference instance given strings that symbolize the public\r\n   * properties of ApiDefinitionReference.\r\n   */\r\n  public static createFromParts(parts: IApiDefinitionReferenceParts): ApiDefinitionReference {\r\n    return new ApiDefinitionReference(parts);\r\n  }\r\n\r\n  /**\r\n   * Stringifies the ApiDefinitionReferenceOptions up and including the\r\n   * scope and package name.\r\n   *\r\n   * Example output: '@microsoft/Utilities'\r\n   */\r\n  public toScopePackageString(): string {\r\n    if (!this.packageName) {\r\n      return '';\r\n    }\r\n    return PackageName.combineParts(this.scopeName, this.packageName);\r\n  }\r\n\r\n  /**\r\n   * Stringifies the ApiDefinitionReferenceOptions up and including the\r\n   * scope, package and export name.\r\n   *\r\n   * Example output: '@microsoft/Utilities.Parse'\r\n   */\r\n  public toExportString(): string {\r\n    let result: string = this.toScopePackageString();\r\n    if (result) {\r\n      result += '#';\r\n    }\r\n    return result + `${this.exportName}`;\r\n  }\r\n\r\n  /**\r\n   * Stringifies the ApiDefinitionReferenceOptions up and including the\r\n   * scope, package, export and member name.\r\n   *\r\n   * Example output: '@microsoft/Utilities#Parse.parseJsonToString'\r\n   */\r\n  public toMemberString(): string {\r\n    return this.toExportString() + `.${this.memberName}`;\r\n  }\r\n\r\n  public toApiItemReference(): IApiItemReference {\r\n    return {\r\n      scopeName: this.scopeName,\r\n      packageName: this.packageName,\r\n      exportName: this.exportName,\r\n      memberName: this.memberName\r\n    };\r\n  }\r\n\r\n  private constructor(parts: IApiDefinitionReferenceParts) {\r\n    this.scopeName = parts.scopeName;\r\n    this.packageName = parts.packageName;\r\n    this.exportName = parts.exportName;\r\n    this.memberName = parts.memberName;\r\n  }\r\n}"]}