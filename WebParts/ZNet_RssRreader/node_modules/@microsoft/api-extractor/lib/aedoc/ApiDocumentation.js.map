{"version":3,"file":"ApiDocumentation.js","sourceRoot":"","sources":["../../src/aedoc/ApiDocumentation.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/* tslint:disable:no-bitwise */\r\n/* tslint:disable:member-ordering */\r\n\r\nimport {\r\n  TSDocParser,\r\n  TSDocTagDefinition,\r\n  TextRange,\r\n  ParserContext,\r\n  ModifierTagSet,\r\n  DocBlockTag,\r\n  StandardTags,\r\n  StandardModifierTagSet,\r\n  DocBlock,\r\n  DocComment,\r\n  DocSection,\r\n  DocNodeKind,\r\n  DocPlainText,\r\n  DocCodeSpan,\r\n  DocErrorText,\r\n  DocEscapedText,\r\n  DocNode,\r\n  DocParagraph,\r\n  DocFencedCode,\r\n  DocHtmlStartTag,\r\n  DocHtmlEndTag,\r\n  DocInlineTag,\r\n  DocLinkTag,\r\n  DocDeclarationReference,\r\n  DocMemberReference,\r\n  DocNodeTransforms\r\n} from '@microsoft/tsdoc';\r\nimport { AstPackage } from '../ast/AstPackage';\r\nimport { ApiDefinitionReference, IApiDefinitionReferenceParts } from '../ApiDefinitionReference';\r\nimport { ExtractorContext } from '../ExtractorContext';\r\nimport { ResolvedApiItem } from '../ResolvedApiItem';\r\nimport { ReleaseTag } from './ReleaseTag';\r\nimport {\r\n  MarkupElement,\r\n  MarkupBasicElement,\r\n  IMarkupApiLink,\r\n  MarkupHighlighter\r\n} from '../markup/MarkupElement';\r\nimport { Markup } from '../markup/Markup';\r\nimport { TypeScriptHelpers } from '../utils/TypeScriptHelpers';\r\nimport { AedocDefinitions } from './AedocDefinitions';\r\nimport { IApiItemReference } from '../api/ApiItem';\r\nimport { PackageName, IParsedPackageNameOrError } from '@microsoft/node-core-library';\r\nimport { AstItemKind } from '../ast/AstItem';\r\n\r\n/**\r\n * A dependency for ApiDocumentation constructor that abstracts away the function\r\n * of resolving an API definition reference.\r\n *\r\n * @internalremarks reportError() will be called if the apiDefinitionRef is to a non local\r\n * item and the package of that non local item can not be found.\r\n * If there is no package given and an  item can not be found we will return undefined.\r\n * Once we support local references, we can be sure that reportError will only be\r\n * called once if the item can not be found (and undefined will be returned by the reference\r\n * function).\r\n */\r\nexport interface IReferenceResolver {\r\n  resolve(\r\n    apiDefinitionRef: ApiDefinitionReference,\r\n    astPackage: AstPackage,\r\n    warnings: string[]): ResolvedApiItem | undefined;\r\n}\r\n\r\n/**\r\n * Used by ApiDocumentation to represent the AEDoc description for a function parameter.\r\n */\r\nexport interface IAedocParameter {\r\n  name: string;\r\n  description: MarkupBasicElement[];\r\n}\r\n\r\nexport class ApiDocumentation {\r\n  /**\r\n   * docCommentTokens that are parsed into Doc Elements.\r\n   */\r\n  public summary: MarkupElement[];\r\n  public deprecatedMessage: MarkupBasicElement[];\r\n  public remarks: MarkupElement[];\r\n  public returnsMessage: MarkupBasicElement[];\r\n  public parameters: { [name: string]: IAedocParameter; };\r\n\r\n  /**\r\n   * A list of \\@link elements to be post-processed after all basic documentation has been created\r\n   * for all items in the project.  We save the processing for later because we need ReleaseTag\r\n   * information before we can determine whether a link element is valid.\r\n   * Example: If API item A has a \\@link in its documentation to API item B, then B must not\r\n   * have ReleaseTag.Internal.\r\n   */\r\n  public incompleteLinks: IMarkupApiLink[];\r\n\r\n  /**\r\n   * A \"release tag\" is an AEDoc tag which indicates whether this definition\r\n   * is considered Public API for third party developers, as well as its release\r\n   * stage (alpha, beta, etc).\r\n   */\r\n  public releaseTag: ReleaseTag;\r\n\r\n  /**\r\n   * True if the \"\\@preapproved\" tag was specified.\r\n   * Indicates that this internal API is exempt from further reviews.\r\n   */\r\n  public preapproved: boolean | undefined;\r\n\r\n  /**\r\n   * True if the \"\\@packagedocumentation\" tag was specified.\r\n   */\r\n  public isPackageDocumentation: boolean | undefined;\r\n\r\n  /**\r\n   * True if the documentation content has not been reviewed yet.\r\n   */\r\n  public isDocBeta: boolean | undefined;\r\n\r\n  /**\r\n   * True if the \\@eventproperty tag was specified.  This means class/interface property\r\n   * represents and event.  It should be a read-only property that returns a user-defined class\r\n   * with operations such as addEventHandler() or removeEventHandler().\r\n   */\r\n  public isEventProperty: boolean | undefined;\r\n\r\n  /**\r\n   * True if the \\@inheritdoc tag was specified.\r\n   */\r\n  public isDocInherited: boolean | undefined;\r\n\r\n  /**\r\n   * True if the \\@inheritdoc tag was specified and is inheriting from a target object\r\n   * that was marked as \\@deprecated.\r\n   */\r\n  public isDocInheritedDeprecated: boolean | undefined;\r\n\r\n  /**\r\n   * True if the \\@readonly tag was specified.\r\n   */\r\n  public hasReadOnlyTag: boolean | undefined;\r\n\r\n  public warnings: string[];\r\n\r\n  /**\r\n   * Whether the \"\\@sealed\" AEDoc tag was specified.\r\n   */\r\n  public isSealed: boolean;\r\n\r\n  /**\r\n   * Whether the \"\\@virtual\" AEDoc tag was specified.\r\n   */\r\n  public isVirtual: boolean;\r\n\r\n  /**\r\n   * Whether the \"\\@override\" AEDoc tag was specified.\r\n   */\r\n  public isOverride: boolean;\r\n\r\n  /**\r\n   * A function type interface that abstracts away resolving\r\n   * an API definition reference to an item that has friendly\r\n   * accessible AstItem properties.\r\n   *\r\n   * Ex: this is useful in the case of parsing inheritdoc expressions,\r\n   * in the sense that we do not know if we the inherited documentation\r\n   * is coming from an AstItem or a ApiItem.\r\n   */\r\n  public referenceResolver: IReferenceResolver;\r\n\r\n  /**\r\n   * We need the extractor to access the package that this AstItem\r\n   * belongs to in order to resolve references.\r\n   */\r\n  public context: ExtractorContext;\r\n\r\n  /**\r\n   * True if any errors were encountered while parsing the AEDoc tokens.\r\n   * This is used to suppress other \"collateral damage\" errors, e.g. if \"@public\" was\r\n   * misspelled then we shouldn't also complain that the \"@public\" tag is missing.\r\n   */\r\n  public failedToParse: boolean;\r\n\r\n  public readonly reportError: (message: string, startIndex?: number) => void;\r\n\r\n  private _parserContext: ParserContext | undefined;\r\n  private _docComment: DocComment | undefined;\r\n\r\n  constructor(inputTextRange: TextRange,\r\n    referenceResolver: IReferenceResolver,\r\n    context: ExtractorContext,\r\n    errorLogger: (message: string, startIndex?: number) => void,\r\n    warnings: string[]) {\r\n\r\n    this.reportError = (message: string, startIndex?: number) => {\r\n      errorLogger(message, startIndex);\r\n      this.failedToParse = true;\r\n    };\r\n\r\n    this.referenceResolver = referenceResolver;\r\n    this.context = context;\r\n    this.reportError = errorLogger;\r\n    this.parameters = {};\r\n    this.warnings = warnings;\r\n\r\n    this.isSealed = false;\r\n    this.isVirtual = false;\r\n    this.isOverride = false;\r\n\r\n    this.summary = [];\r\n    this.returnsMessage = [];\r\n    this.deprecatedMessage = [];\r\n    this.remarks = [];\r\n    this.incompleteLinks = [];\r\n    this.releaseTag = ReleaseTag.None;\r\n\r\n    this._parserContext = undefined;\r\n    this._docComment = undefined;\r\n\r\n    if (!inputTextRange.isEmpty()) {\r\n      this._parseDocs(inputTextRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if an AEDoc comment was parsed for the API item.\r\n   */\r\n  public get aedocCommentFound(): boolean {\r\n    if (this._parserContext) {\r\n      return this._parserContext.tokens.length > 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns the original AEDoc comment\r\n   */\r\n  public emitNormalizedComment(): string {\r\n    if (this._parserContext) {\r\n      const content: string = this._parserContext.lines.map(x => x.toString()).join('\\n');\r\n      return TypeScriptHelpers.formatJSDocContent(content);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Executes the implementation details involved in completing the documentation initialization.\r\n   * Currently completes link and inheritdocs.\r\n   */\r\n  public completeInitialization(warnings: string[]): void {\r\n    // Ensure links are valid\r\n    this._completeLinks();\r\n    // Ensure inheritdocs are valid\r\n    this._completeInheritdocs(warnings);\r\n  }\r\n\r\n  private _parseDocs(inputTextRange: TextRange): void {\r\n    const tsdocParser: TSDocParser = new TSDocParser(AedocDefinitions.parserConfiguration);\r\n    this._parserContext = tsdocParser.parseRange(inputTextRange);\r\n    this._docComment = this._parserContext.docComment;\r\n\r\n    for (const message of this._parserContext.log.messages) {\r\n      this.reportError(message.unformattedText, message.textRange.pos);\r\n    }\r\n\r\n    this._parseModifierTags();\r\n    this._parseSections();\r\n  }\r\n\r\n  private _parseModifierTags(): void {\r\n    if (!this._docComment) {\r\n      return;\r\n    }\r\n    const modifierTagSet: StandardModifierTagSet = this._docComment.modifierTagSet;\r\n\r\n    // The first function call that encounters a duplicate will return false.\r\n    // When there are duplicates, the broadest release tag wins.\r\n    // tslint:disable-next-line:no-unused-expression\r\n    this._parseReleaseTag(modifierTagSet, StandardTags.public, ReleaseTag.Public)\r\n      && this._parseReleaseTag(modifierTagSet, StandardTags.beta, ReleaseTag.Beta)\r\n      && this._parseReleaseTag(modifierTagSet, StandardTags.alpha, ReleaseTag.Alpha)\r\n      && this._parseReleaseTag(modifierTagSet, StandardTags.internal, ReleaseTag.Internal);\r\n\r\n    this.preapproved = modifierTagSet.hasTag(AedocDefinitions.preapprovedTag);\r\n\r\n    this.isPackageDocumentation = modifierTagSet.isPackageDocumentation();\r\n    this.hasReadOnlyTag = modifierTagSet.isReadonly();\r\n    this.isDocBeta = modifierTagSet.hasTag(AedocDefinitions.betaDocumentation);\r\n    this.isEventProperty = modifierTagSet.isEventProperty();\r\n    this.isSealed = modifierTagSet.isSealed();\r\n    this.isVirtual = modifierTagSet.isVirtual();\r\n    this.isOverride = modifierTagSet.isOverride();\r\n\r\n    if (this.preapproved && this.releaseTag !== ReleaseTag.Internal) {\r\n      this.reportError('The @preapproved tag may only be applied to @internal definitions');\r\n      this.preapproved = false;\r\n    }\r\n\r\n    if (this.isSealed && this.isVirtual) {\r\n      this.reportError('The @sealed and @virtual tags may not be used together');\r\n    }\r\n\r\n    if (this.isVirtual && this.isOverride) {\r\n      this.reportError('The @virtual and @override tags may not be used together');\r\n    }\r\n  }\r\n\r\n  private _parseReleaseTag(modifierTagSet: ModifierTagSet, tagDefinition: TSDocTagDefinition,\r\n    releaseTag: ReleaseTag): boolean {\r\n\r\n    const node: DocBlockTag | undefined = modifierTagSet.tryGetTag(tagDefinition);\r\n    if (node) {\r\n      if (this.releaseTag !== ReleaseTag.None) {\r\n        this.reportError('More than one release tag was specified (@alpha, @beta, @public, @internal)');\r\n        return false;\r\n      }\r\n      this.releaseTag = releaseTag;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private _parseSections(): void {\r\n    if (!this._docComment) {\r\n      return;\r\n    }\r\n\r\n    this._renderAsMarkupElementsInto(this.summary, this._docComment.summarySection,\r\n      'the summary section', false);\r\n\r\n    if (this._docComment.remarksBlock) {\r\n      this._renderAsMarkupElementsInto(this.remarks, this._docComment.remarksBlock,\r\n        'the remarks section', true);\r\n    }\r\n\r\n    if (this._docComment.deprecatedBlock) {\r\n      this._renderAsMarkupElementsInto(this.deprecatedMessage, this._docComment.deprecatedBlock,\r\n        'a deprecation notice', false);\r\n    }\r\n\r\n    if (this._docComment.returnsBlock) {\r\n      this._renderAsMarkupElementsInto(this.returnsMessage, this._docComment.returnsBlock,\r\n        'a return value description', false);\r\n    }\r\n\r\n    for (const paramBlock of this._docComment.paramBlocks) {\r\n      const aedocParameter: IAedocParameter = {\r\n        name: paramBlock.parameterName,\r\n        description: []\r\n      };\r\n      this._renderAsMarkupElementsInto(aedocParameter.description, paramBlock,\r\n        'a parameter description', false);\r\n\r\n      this.parameters[paramBlock.parameterName] = aedocParameter;\r\n    }\r\n  }\r\n\r\n  private _renderAsMarkupElementsInto(result: MarkupElement[], node: DocNode, sectionName: string,\r\n    allowStructuredContent: boolean): void {\r\n    switch (node.kind) {\r\n      case DocNodeKind.Block:\r\n      case DocNodeKind.ParamBlock:\r\n        const docBlock: DocBlock = node as DocBlock;\r\n        this._renderAsMarkupElementsInto(result, docBlock.content, sectionName, allowStructuredContent);\r\n        break;\r\n      case DocNodeKind.Section:\r\n        const docSection: DocSection = node as DocSection;\r\n        for (const childNode of docSection.nodes) {\r\n          this._renderAsMarkupElementsInto(result, childNode, sectionName, allowStructuredContent);\r\n        }\r\n        break;\r\n      case DocNodeKind.BlockTag:\r\n        // If an unrecognized TSDoc block tag appears in the content, don't render it\r\n        break;\r\n      case DocNodeKind.CodeSpan:\r\n        const docCodeSpan: DocCodeSpan = node as DocCodeSpan;\r\n        result.push(Markup.createCode(docCodeSpan.code));\r\n        break;\r\n      case DocNodeKind.ErrorText:\r\n        const docErrorText: DocErrorText = node as DocErrorText;\r\n        Markup.appendTextElements(result, docErrorText.text);\r\n        break;\r\n      case DocNodeKind.EscapedText:\r\n        const docEscapedText: DocEscapedText = node as DocEscapedText;\r\n        Markup.appendTextElements(result, docEscapedText.decodedText);\r\n        break;\r\n      case DocNodeKind.FencedCode:\r\n        if (allowStructuredContent) {\r\n          const docCodeFence: DocFencedCode = node as DocFencedCode;\r\n          let markupHighlighter: MarkupHighlighter = 'plain';\r\n          switch (docCodeFence.language.toUpperCase()) {\r\n            case 'TS':\r\n            case 'TYPESCRIPT':\r\n            case 'JS':\r\n            case 'JAVASCRIPT':\r\n              markupHighlighter = 'javascript';\r\n              break;\r\n          }\r\n          result.push(Markup.createCodeBox(docCodeFence.code, markupHighlighter));\r\n        } else {\r\n          this._reportIncorrectStructuredContent('a fenced code block', sectionName);\r\n          return;\r\n        }\r\n        break;\r\n      case DocNodeKind.HtmlStartTag:\r\n        const docHtmlStartTag: DocHtmlStartTag = node as DocHtmlStartTag;\r\n        let htmlStartTag: string = '<';\r\n        htmlStartTag += docHtmlStartTag.name;\r\n        for (const attribute of docHtmlStartTag.htmlAttributes) {\r\n          htmlStartTag += ` ${attribute.name}=${attribute.value}`;\r\n        }\r\n        if (docHtmlStartTag.selfClosingTag) {\r\n          htmlStartTag += '/';\r\n        }\r\n        htmlStartTag += '>';\r\n        result.push(Markup.createHtmlTag(htmlStartTag));\r\n        break;\r\n      case DocNodeKind.HtmlEndTag:\r\n        const docHtmlEndTag: DocHtmlEndTag = node as DocHtmlEndTag;\r\n        result.push(Markup.createHtmlTag(`</${docHtmlEndTag.name}>`));\r\n        break;\r\n      case DocNodeKind.InlineTag:\r\n        const docInlineTag: DocInlineTag = node as DocInlineTag;\r\n        Markup.appendTextElements(result, '{' + docInlineTag.tagName + '}');\r\n        break;\r\n      case DocNodeKind.LinkTag:\r\n        const docLinkTag: DocLinkTag = node as DocLinkTag;\r\n        if (docLinkTag.urlDestination) {\r\n          result.push(Markup.createWebLinkFromText(docLinkTag.linkText || docLinkTag.urlDestination,\r\n            docLinkTag.urlDestination));\r\n        } else if (docLinkTag.codeDestination) {\r\n          const apiItemReference: IApiItemReference | undefined\r\n            = this._tryCreateApiItemReference(docLinkTag.codeDestination);\r\n          if (apiItemReference) {\r\n            let linkText: string | undefined = docLinkTag.linkText;\r\n            if (!linkText) {\r\n              linkText = apiItemReference.exportName;\r\n              if (apiItemReference.memberName) {\r\n                linkText += '.' + apiItemReference.memberName;\r\n              }\r\n            }\r\n            const linkElement: IMarkupApiLink = Markup.createApiLinkFromText(linkText, apiItemReference);\r\n            result.push(linkElement);\r\n\r\n            // The link will get resolved later in _completeLinks()\r\n            this.incompleteLinks.push(linkElement);\r\n          }\r\n        }\r\n        break;\r\n      case DocNodeKind.Paragraph:\r\n        if (result.length > 0) {\r\n          switch (result[result.length - 1].kind) {\r\n            case 'code-box':\r\n            case 'heading1':\r\n            case 'heading2':\r\n            case 'note-box':\r\n            case 'page':\r\n            case 'paragraph':\r\n            case 'table':\r\n              // Don't put a Markup.PARAGRAPH after a structural element,\r\n              // since it is implicit.\r\n              break;\r\n            default:\r\n              result.push(Markup.PARAGRAPH);\r\n              break;\r\n          }\r\n        }\r\n        const docParagraph: DocParagraph = node as DocParagraph;\r\n        for (const childNode of DocNodeTransforms.trimSpacesInParagraph(docParagraph).nodes) {\r\n          this._renderAsMarkupElementsInto(result, childNode, sectionName, allowStructuredContent);\r\n        }\r\n        break;\r\n      case DocNodeKind.PlainText:\r\n        const docPlainText: DocPlainText = node as DocPlainText;\r\n        Markup.appendTextElements(result, docPlainText.text);\r\n        break;\r\n      case DocNodeKind.SoftBreak:\r\n        Markup.appendTextElements(result, ' ');\r\n        break;\r\n      default:\r\n        this.reportError('Unsupported TSDoc element: ' + node.kind);\r\n    }\r\n  }\r\n\r\n  private _reportIncorrectStructuredContent(constructName: string, sectionName: string): void {\r\n    this.reportError(`Structured content such as ${constructName} cannot be used in ${sectionName}`);\r\n  }\r\n\r\n  // This is a temporary adapter until we fully generalize IApiItemReference to support TSDoc declaration references\r\n  private _tryCreateApiItemReference(declarationReference: DocDeclarationReference): IApiItemReference | undefined {\r\n    if (declarationReference.importPath) {\r\n      this.reportError(`API Extractor does not yet support TSDoc declaration references containing an import path:`\r\n        + ` \"(declarationReference.importPath)\"`);\r\n      return undefined;\r\n    }\r\n\r\n    const memberReferences: ReadonlyArray<DocMemberReference> = declarationReference.memberReferences;\r\n    if (memberReferences.length > 2) {\r\n      // This will get be fixed soon\r\n      this.reportError('API Extractor does not yet support TSDoc declaration references containing'\r\n        + ' more than 2 levels of nesting');\r\n      return undefined;\r\n    }\r\n    if (memberReferences.length === 0) {\r\n      this.reportError('API Extractor does not yet support TSDoc declaration references without a member reference');\r\n      return undefined;\r\n    }\r\n\r\n    const apiItemReference: IApiItemReference = {\r\n      scopeName: '',\r\n      packageName: '',\r\n      exportName: '',\r\n      memberName: ''\r\n    };\r\n\r\n    if (declarationReference.packageName) {\r\n      const parsedPackageName: IParsedPackageNameOrError = PackageName.tryParse(declarationReference.packageName);\r\n      if (parsedPackageName.error) {\r\n        this.reportError(`Invalid package name ${declarationReference.packageName}: ${parsedPackageName.error}`);\r\n        return undefined;\r\n      }\r\n\r\n      apiItemReference.scopeName = parsedPackageName.scope;\r\n      apiItemReference.packageName = parsedPackageName.unscopedName;\r\n    } else {\r\n\r\n      // If the package name is unspecified, assume it is the current package\r\n      apiItemReference.scopeName = this.context.parsedPackageName.scope;\r\n      apiItemReference.packageName = this.context.parsedPackageName.unscopedName;\r\n    }\r\n\r\n    let identifier: string | undefined = this._tryGetMemberReferenceIdentifier(memberReferences[0]);\r\n    if (!identifier) {\r\n      return undefined;\r\n    }\r\n    apiItemReference.exportName = identifier;\r\n\r\n    if (memberReferences.length > 1) {\r\n      identifier = this._tryGetMemberReferenceIdentifier(memberReferences[1]);\r\n      if (!identifier) {\r\n        return undefined;\r\n      }\r\n      apiItemReference.memberName = identifier;\r\n    }\r\n\r\n    return apiItemReference;\r\n  }\r\n\r\n  private _tryGetMemberReferenceIdentifier(memberReference: DocMemberReference): string | undefined {\r\n    if (!memberReference.memberIdentifier) {\r\n      this.reportError('API Extractor currently only supports TSDoc member references using identifiers');\r\n      return undefined;\r\n    }\r\n\r\n    if (memberReference.memberIdentifier.hasQuotes) {\r\n      // Allow quotes if the identifier is being quoted because it is a system name.\r\n      // (What's not supported is special characters in the identifier.)\r\n      if (!/[_a-z][_a-z0-0]*/i.test(memberReference.memberIdentifier.identifier)) {\r\n        this.reportError('API Extractor does not yet support TSDoc member references using quotes');\r\n        return undefined;\r\n      }\r\n    }\r\n\r\n    return memberReference.memberIdentifier.identifier;\r\n  }\r\n\r\n  /**\r\n   * A processing of linkDocElements that refer to an ApiDefinitionReference. This method\r\n   * ensures that the reference is to an API item that is not 'Internal'.\r\n   */\r\n  private _completeLinks(): void {\r\n    for ( ; ; ) {\r\n      const codeLink: IMarkupApiLink | undefined = this.incompleteLinks.pop();\r\n      if (!codeLink) {\r\n        break;\r\n      }\r\n\r\n      const parts: IApiDefinitionReferenceParts = {\r\n        scopeName: codeLink.target.scopeName,\r\n        packageName: codeLink.target.packageName,\r\n        exportName: codeLink.target.exportName,\r\n        memberName: codeLink.target.memberName\r\n      };\r\n\r\n      const apiDefinitionRef: ApiDefinitionReference = ApiDefinitionReference.createFromParts(parts);\r\n      const resolvedAstItem: ResolvedApiItem | undefined =  this.referenceResolver.resolve(\r\n        apiDefinitionRef,\r\n        this.context.package,\r\n        this.warnings\r\n      );\r\n\r\n      // If the apiDefinitionRef can not be found the resolvedAstItem will be\r\n      // undefined and an error will have been reported via this.reportError\r\n      if (resolvedAstItem) {\r\n        if (resolvedAstItem.releaseTag === ReleaseTag.Internal\r\n          || resolvedAstItem.releaseTag === ReleaseTag.Alpha) {\r\n\r\n          this.reportError('The {@link} tag references an @internal or @alpha API item, '\r\n            + 'which will not appear in the generated documentation');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A processing of inheritdoc 'Tokens'. This processing occurs after we have created documentation\r\n   * for all API items.\r\n   */\r\n  private _completeInheritdocs(warnings: string[]): void {\r\n    if (!this._docComment || !this._docComment.inheritDocTag) {\r\n      return;\r\n    }\r\n    if (!this._docComment.inheritDocTag.declarationReference) {\r\n      return;\r\n    }\r\n    const apiItemReference: IApiItemReference | undefined = this._tryCreateApiItemReference(\r\n      this._docComment.inheritDocTag.declarationReference);\r\n    if (!apiItemReference) {\r\n      return;\r\n    }\r\n\r\n    const apiDefinitionRef: ApiDefinitionReference = ApiDefinitionReference.createFromParts(apiItemReference);\r\n\r\n    // Atempt to locate the apiDefinitionRef\r\n    const resolvedAstItem: ResolvedApiItem | undefined = this.referenceResolver.resolve(\r\n      apiDefinitionRef,\r\n      this.context.package,\r\n      warnings\r\n    );\r\n\r\n    // If no resolvedAstItem found then nothing to inherit\r\n    // But for the time being set the summary to a text object\r\n    if (!resolvedAstItem) {\r\n      let unresolvedAstItemName: string = apiDefinitionRef.exportName;\r\n      if (apiDefinitionRef.memberName) {\r\n        unresolvedAstItemName += '.' + apiDefinitionRef.memberName;\r\n      }\r\n      this.summary.push(...Markup.createTextElements(\r\n        `See documentation for ${unresolvedAstItemName}`));\r\n      return;\r\n    }\r\n\r\n    // We are going to copy the resolvedAstItem's documentation\r\n    // We must make sure it's documentation can be completed,\r\n    // if we cannot, an error will be reported viathe documentation error handler.\r\n    // This will only be the case our resolvedAstItem was created from a local\r\n    // AstItem. Resolutions from JSON will have an undefined 'astItem' property.\r\n    // Example: a circular reference will report an error.\r\n    if (resolvedAstItem.astItem) {\r\n      resolvedAstItem.astItem.completeInitialization();\r\n    }\r\n\r\n    // inheritdoc found, copy over IApiBaseDefinition properties\r\n    this.summary = resolvedAstItem.summary;\r\n    this.remarks = resolvedAstItem.remarks;\r\n\r\n    // Copy over detailed properties if neccessary\r\n    // Add additional cases if needed\r\n    switch (resolvedAstItem.kind) {\r\n      case AstItemKind.Function:\r\n        this.parameters = resolvedAstItem.params || { };\r\n        this.returnsMessage = resolvedAstItem.returnsMessage || [];\r\n        break;\r\n      case AstItemKind.Method:\r\n      case AstItemKind.Constructor:\r\n        this.parameters = resolvedAstItem.params || { };\r\n        this.returnsMessage = resolvedAstItem.returnsMessage || [];\r\n        break;\r\n    }\r\n\r\n    // Check if inheritdoc is depreacted\r\n    // We need to check if this documentation has a deprecated message\r\n    // but it may not appear until after this token.\r\n    if (resolvedAstItem.deprecatedMessage && resolvedAstItem.deprecatedMessage.length > 0) {\r\n      this.isDocInheritedDeprecated = true;\r\n    }\r\n  }\r\n}\r\n"]}