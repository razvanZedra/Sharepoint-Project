{"version":3,"file":"start.js","sourceRoot":"","sources":["../src/start.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,yBAAyB;AACzB,iCAAiC;AACjC,6BAA6B;AAI7B,2EAAwE;AAExE,MAAM,qBAAqB,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAC1D,SAAS,EAAE,IAAI,mCAA4B,CAC5C,CAAC;AACF,MAAM,aAAa,GAAwB,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1E,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,aAAa,CAAC,OAAO,GAAG;MACtE,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAEzD,MAAM,MAAM,GAA4B,IAAI,iDAAuB,EAAE,CAAC;AAEtE,MAAM,CAAC,OAAO,EAAE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as os from 'os';\r\nimport * as colors from 'colors';\r\nimport * as path from 'path';\r\n\r\nimport { FileConstants } from '@microsoft/node-core-library';\r\n\r\nimport { ApiExtractorCommandLine } from './cli/ApiExtractorCommandLine';\r\n\r\nconst myPackageJsonFilename: string = path.resolve(path.join(\r\n  __dirname, '..', FileConstants.PackageJson)\r\n);\r\nconst myPackageJson: { version: string } = require(myPackageJsonFilename);\r\n\r\nconsole.log(os.EOL + colors.bold(`api-extractor ${myPackageJson.version} `\r\n  + colors.cyan(' - http://aka.ms/extractor') + os.EOL));\r\n\r\nconst parser: ApiExtractorCommandLine = new ApiExtractorCommandLine();\r\n\r\nparser.execute();\r\n"]}