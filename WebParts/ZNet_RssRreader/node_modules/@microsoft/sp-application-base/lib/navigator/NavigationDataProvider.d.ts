import { ServiceScope } from '@microsoft/sp-core-library';
import { _IPreloadedData } from '@microsoft/sp-loader';
import { INavigationProperties } from './INavigationResult';
import { INavigationDataResponse } from './INavigationDataResponse';
/**
 * Navigation Data Provider for SPFx applications.
 * It fetches data required to initiate an SPFx Navigation operation. It also caches the navigation
 * data when appropriate
 *
 * @internal
 */
export default class NavigationDataProvider {
    private static readonly storeKey;
    private _spHttpClient;
    private _navigationStore;
    private _navigationStorePromise;
    private _dataValidator;
    constructor(serviceScope: ServiceScope, validator: (preloadedData: _IPreloadedData) => void);
    /**
     * Issues a request to get data association with a given url
     *
     * @param url - URL of the page to fetch data for
     * @param requestType - The request type
     * @param props - Optional Navigation property bag
     *
     * @returns - A navigation data response promise
     */
    getData(url: string, props?: INavigationProperties): Promise<INavigationDataResponse>;
    private _getStore();
    /**
     * Loads a page from SharePoint.
     *
     * @param url - URL of the page to load.
     * @param requestHeaders - Optional request headers
     * @return Promise with the pertinent data for the request.
     */
    private _fetchData<T>(url, requestHeaders?);
}
