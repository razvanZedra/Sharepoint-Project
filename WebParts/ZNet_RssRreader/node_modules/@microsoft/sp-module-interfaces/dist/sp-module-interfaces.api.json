{
  "kind": "package",
  "name": "@microsoft/sp-module-interfaces",
  "summary": [],
  "remarks": [],
  "exports": {
    "IClientSideAssemblyManifest": {
      "kind": "interface",
      "extends": "IClientSideComponentManifest",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "A library is defined by this manifest. Libraries currently do not have any additional properties."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "rootComponentId": {
          "kind": "property",
          "signature": "rootComponentId: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The ID of the component from which the assembly is built."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: any GUID"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: \"dbef608d-3ad5-4f8f-b139-d916f2f0a294\""
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideComponentLoaderConfiguration": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface describes how a client-side component is to be loaded and initialized by a SharePoint client framework. It contains all data for loading an entrypoint script and its dependency scripts."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "entryModuleId": {
          "kind": "property",
          "signature": "entryModuleId: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This is the ID of one of the entries in the \"scriptResources\" dictionary."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The loader will download and evaluate the script resource referenced in this field, resolve all dependencies against the keys in the \"scriptResources\", and return the exported object to the loader's calling function. The entry referenced in the \"scriptResources\" dictionary must be of the \"internal\" or the \"localized\" type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: An entry in the \"scriptResources\" dictionary that defines the base exported module of the component."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"myApplication.bundle\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "exportName": {
          "kind": "property",
          "signature": "exportName?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The module referenced by the \"entryModuleId\" field may export an object with several fields."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This value optionally references the name of a field on the object exported by the module referenced by the "
            },
            {
              "kind": "code",
              "text": "entryModuleId",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field. When this field has a value, the value of the referenced field on the object exported by the module referenced by the "
            },
            {
              "kind": "code",
              "text": "entryModuleId",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field is returned when this manifest is loaded instead of the base exported object. For example, if entryModuleId refers to a module with with a top-level export of "
            },
            {
              "kind": "code",
              "text": "{ foo: 'bar', baz: 123 }",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " and:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- if this field is unset, the value returned by the module loader is "
            },
            {
              "kind": "code",
              "text": "{ foo: 'bar', baz: 123 }",
              "highlighter": "plain"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- if this field is set to "
            },
            {
              "kind": "code",
              "text": "foo",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the value returned by the module loader is "
            },
            {
              "kind": "code",
              "text": "bar",
              "highlighter": "plain"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- if this field is set to "
            },
            {
              "kind": "code",
              "text": "bar",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the value returned by the module loader is undefined (as "
            },
            {
              "kind": "code",
              "text": "bar",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " is not a key in the top-level export)."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "mySpWebpart",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "internalModuleBaseUrls": {
          "kind": "property",
          "signature": "internalModuleBaseUrls: string[];",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string[]",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This is an array of fully-qualified paths to be prepended to each of the script resource paths with the \"internal\" or \"localized\" type. If one fails to load, the loader will attempt to load from the next until there are no base paths remaining."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "All \"internal\" and \"localized\" script resources that do not have fully-qualified URLs as their \"path\" field values must be hosted under each of the paths listed in this property. For example, if an internal module's \"path\" field value is "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " and this field's value is "
            },
            {
              "kind": "code",
              "text": "[ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ]",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the loader will first attempt to load this script resource from the URL "
            },
            {
              "kind": "code",
              "text": "\"https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ". If loading from that URL fails, the loader will then attempt to load this script resource from "
            },
            {
              "kind": "code",
              "text": "\"https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ". If that URL fails to load, the component will fail to load and an error will be returned. It is important to note that the support for multiple base URLs is purely for failover support. This means that all files must be present on all hosts listed in this field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: Base URLs for script resources with the \"internal\" or \"localized\" type."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Any URL that contains all internal scripts referenced in the \"scriptResources\" dictionary."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "[ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ]",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "scriptResources": {
          "kind": "property",
          "signature": "scriptResources:",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [name: string]: IModuleConfiguration;\n    }",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This is a dictionary of named script resources. "
            },
            {
              "kind": "code",
              "text": "path",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "localizedPath",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " modules may reference each other and "
            },
            {
              "kind": "code",
              "text": "manifest",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " modules are expected to be provided by the framework runtime. The resource named in the "
            },
            {
              "kind": "code",
              "text": "entryModuleId",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " must contain the component's exported object."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: A dictionary of named script resources."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example:"
            },
            {
              "kind": "code-box",
              "text": " {\n   \"myApplication.bundle\": {\n     \"type\": \"path\",\n     \"path\": \"master_2015-04-20/my-application.bundle_1928f8a0.js\"\n   },\n   \"@microsoft/sp-client-base\": {\n     \"type\": \"component\",\n     \"id\": \"af59c2b3-2da7-41fd-8b72-3939817960af\",\n     \"version\": \"latest\"\n   },\n   \"@microsoft/sp-client-preview\": {\n     \"type\": \"component\",\n     \"id\": \"4d5eb168-6729-49a8-aec7-0e397f486b6e\",\n     \"version\": \"latest\"\n   },\n   \"jQuery\": {\n     \"type\": \"component\",\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"version\": \"2.2.4\",\n     \"path\": \"https://code.jquery.com/jquery-2.2.4.min.js\"\n   },\n   \"myApplication_strings\": {\n     \"type\": \"localizedPath\",\n     \"defaultPath\": \"master_2015-04-20/my-application_strings_default_af378e0d.js\",\n     \"paths\": {\n       \"en-us\": \"master_2015-04-20/my-application_strings_en-us_d38ff012.js\",\n       \"fr-fr\": \"master_2015-04-20/my-application_strings_fr-fr_138af7e4.js\"\n     }\n   }\n }\n",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideComponentManifest": {
      "kind": "interface",
      "extends": "IClientSideManifestBase",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "All client-side components built on the SharePoint framework need a valid component manifest. This interface represents properties that are required by all types of client-side components like Applications and Web Parts. Component specific manifests will extend this interface to add properties required by that component type."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The schema of this manifest is owned and versioned by Microsoft. Following rules should be followed while changing this schema. This set of rules can also be called the \"manifest upgrade rules\"."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- For minor changes, new properties can be added to this schema in a backwards-compatible way. i.e. the code that processes the manifest should be able to handle the absence of those new properties."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- Try to model your changes as minor SemVer increments. Major version changes should be avoided because they impose a migration cost on developers."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- The "
        },
        {
          "kind": "code",
          "text": "'manifestVersion'",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " should be bumped for all small or big changes."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "alias": {
          "kind": "property",
          "signature": "alias: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A short name usually given by developer. It does not need to be localized and is expected to stay the same through the lifetime of the component. If an application overrides the "
            },
            {
              "kind": "code",
              "text": "ClientSideApplication.alias",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " property, "
            },
            {
              "kind": "code",
              "text": "ClientSideApplication.alias",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " is given precedence over the value provided in the manifest."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: A short name to identify a client-side component by developer."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Allowed characters are a-z, A-Z, and '-'. Not longer than 40 characters."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"NewFeed\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "componentType": {
          "kind": "property",
          "signature": "componentType: ComponentType;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ComponentType",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Type of client-side component. Components with the \"Application\" type are defined by the \"IClientSideApplicationManifest\" interface. Components with the \"WebPart\" type are defined by the \"IClientSideWebPartManifest\" interface. Components with the \"Library\" type are defined by the \"IClientSideLibraryManifest\" interface."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: To help bundling, loading, enumeration, and initialization of components based on their contents."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: "
            },
            {
              "kind": "code",
              "text": "\"Application\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "code",
              "text": "\"WebPart\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "code",
              "text": "\"Library\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "code",
              "text": "\"Extension\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "loaderConfig": {
          "kind": "property",
          "signature": "loaderConfig: IClientSideComponentLoaderConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IClientSideComponentLoaderConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This portion of the configuration describes how the component is to be loaded and initialized by a client. It contains an enumeration of scripts that the component requires along with a single entry point script."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: Loading a component."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "See "
            },
            {
              "kind": "code",
              "text": "IClientSideComponentLoaderConfiguration",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " for more information and examples."
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "requiresCustomScript": {
          "kind": "property",
          "signature": "requiresCustomScript?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If true, the component can only be installed on sites where Custom Script is enabled. This should be set to true if the component allows authors to execute arbitrary scripts on the page."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Defaults to false. See https://support.office.com/en-us/article/Turn-scripting-capabilities-on-or-off-1f2c515f-5d7e-448a-9fd7-835da935584f for more information."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: Requires Custom Script to be allowed in order for this component to be installed and run."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "safeWithCustomScriptDisabled": {
          "kind": "property",
          "signature": "safeWithCustomScriptDisabled?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "Use requiresCustomScript instead of safeWithCustomScriptDisabled."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "This property is provided for backwards compatibility. It no longer has any effect."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "version": {
          "kind": "property",
          "signature": "version: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Client-side component version. The value of this field is expected to be controlled by the developer of the client-side component."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The purpose of this field is to help client-side component developers upgrade their client-side components in a managed way. This helps the consumers of the client-side component make decisions about when and how to upgrade the client-side component. As the developer evolves the code for their client-side component, they can decide to bump the MAJOR, MINOR or PATCH version of the component."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "All incompatible API changes should result in a MAJOR version bump. Backwards compatible functionality changes should result in a MINOR version bump, and backwards compatible bug fixes should result in a PATCH version bump. Please see "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "http://semver.org"
                }
              ],
              "targetUrl": "http://semver.org"
            },
            {
              "kind": "text",
              "text": " for more details on how to manage the version of your components."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: Versioning and evolving a client-side component safely in a controlled way."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: string representing a "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": " semantic version"
                }
              ],
              "targetUrl": "http://semver.org"
            },
            {
              "kind": "text",
              "text": " i.e. MAJOR.MINOR.PATCH"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"1.0.0\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideExtensionManifest": {
      "kind": "interface",
      "extends": "IClientSideComponentManifest",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the manifest for a client-side extension."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "extensionType": {
          "kind": "property",
          "signature": "extensionType: ExtensionType;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ExtensionType",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the type of client-side extension. Some extension types support additional manifest fields beyond SPClientSideExtensionManifest."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideLibraryManifest": {
      "kind": "interface",
      "extends": "IClientSideComponentManifest",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "A library is defined by this manifest. Libraries currently do not have any additional properties."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false
    },
    "IClientSideManifestBase": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface defines members that are common between all deployable manifests."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "id": {
          "kind": "property",
          "signature": "id: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A universally unique component id. Each client-side component is required to have this id. Once an id has been used for a component, it cannot be changed. A change in this value is treated same as the creation of a new component. Two components are never expected to have the same id."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: Uniquely identify a client-side component."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: a GUID string"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"",
              "highlighter": "plain"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "manifestVersion": {
          "kind": "property",
          "signature": "manifestVersion: number;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "number",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Version of the component manifest schema. The value of this field is controlled by Microsoft. The purpose of this field is to help manage upgrades of the component manifest schema."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "A component developer needs to only confirm that they are using the correct value per the manifest schema. Please read the \"manifest upgrade rules\" for more details on when the schema could change. Note, manifest schema version upgrade will be considered a big API change event and will be advertised broadly."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: To help support multiple manifest schema versions."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: A positive integer."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "1",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideWebPartManifest": {
      "kind": "interface",
      "extends": "IClientSideComponentManifest",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "The client-side SharePoint framework identifies a Web Part by its manifest. All Web Parts are expected to have a manifest."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The manifest is a schematized JSON blob that is used in multiple parts of the SharePoint infrastructure to identify, load and process a Web Part. The schema for this manifest is completely owned and versioned by Microsoft. There are some required properties in the manifest and some optional properties. Optional properties need to be provided only if the Web Part needs the specific functionality. An invalid manifest could lead to issues with Web Part loading and functionality problems."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "disabledOnClassicSharepoint": {
          "kind": "property",
          "signature": "disabledOnClassicSharepoint?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If true, this web part is disabled on SharePoint classic pages"
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Certain web parts may not be required on or apply to SharePoint classic pages. This flag helps control that. If this flag is true, the web part will not appear in the classic page web part gallery."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "hiddenFromToolbox": {
          "kind": "property",
          "signature": "hiddenFromToolbox?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If true, this web part should not be displayed in the modern SharePoint toolbox."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: Use this flag if it is not appropriate to display a web part in the modern toolbox. This property is not used in Classic SharePoint. By default, all web parts are enabled to be displayed in the toolbox. Such web parts can be provisioned on pages though API or be added to the page in a pre configured way."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "preconfiguredEntries": {
          "kind": "property",
          "signature": "preconfiguredEntries: IClientSideWebPartManifestEntry<TProperties>[];",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IClientSideWebPartManifestEntry<TProperties>[]",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A Web Part can have pre-configured properties like the title, description, toolbox group name and Web Part specific custom properties. And there can be multiple instances of these pre-configured properties."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This helps support scenarios where an organization may want to present multiple pre-configured entries for a Web Part in the Toolbox. Each entry is expected to configure the Web Part with a different set of pre-configured properties. A developer may decide to seed some initial values for these properties but an organization admin can go ahead and customize these properties per the needs of his/her organization. The properties can also be modified by the author of the page."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: help display a Web Part in the Toolbox, PropertyPane and the initial rendering of the Web Part."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Type: JSON object"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Array of "
            },
            {
              "kind": "code",
              "text": "IClientSideWebPartManifestEntry",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " objects."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example:"
            },
            {
              "kind": "code-box",
              "text": "  [{\n     title:\"Image Web Part\",\n     description: \"This Web Part displays an image\",\n     group: \"Media\",\n     iconFontName: \"image\",\n     properties: {\n       imageSource: \"https://contoso.akamaihd.net/files/mountRainier.jpg\",\n       captionText: \"Mount Rainier\"\n     }\n   }]\n",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "supportsFullBleed": {
          "kind": "property",
          "signature": "supportsFullBleed?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Definition: If true, this web part supports and has been tested for full bleed experience."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: Use this flag if a web part supports full bleed experience and has been tested as such. In this context, full bleed is a term used to denote that the web part takes the whole width of the containing page. Full bleed experiences require special treatment and testing. By default no web parts support full bleed experiences."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "supportsThemeVariants": {
          "kind": "property",
          "signature": "supportsThemeVariants?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Definition: If true, this web part supports and has been tested for theme variants experience."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Usage: Use this flag if a web part supports theme variants and has been tested as such. In order to support theme variants, web parts must have the capability to render correctly in the context of a theme variant. A web part may or may not need to be updated to support theme variants, but should always be tested before enabling this flag. By default no web parts support theme variants."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideWebPartManifestEntry": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface specifies the set of properties that can be pre-configured by a Web Part developer. Each pre-configured instance of the Web Part will need a copy of these properties. Organization admins and content authors can modify these properties on a need basis."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "dataVersion": {
          "kind": "property",
          "signature": "dataVersion?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Definition: Use this field to specify the data version of the pre-configured data provided to the web part. Note that data version is different from the version field in the manifest."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The manifest version is used to control the versioning of the web part code, while data version is used to control the versioning of the serialized data of the web part. Refer to dataVersion field of your web part for more information."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: versioning and evolving the serialized data of the web part"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Type: string representing a "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": " semantic version"
                }
              ],
              "targetUrl": "http://semver.org"
            },
            {
              "kind": "text",
              "text": " with only two parts"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: MAJOR.MINOR"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"1.0\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "description": {
          "kind": "property",
          "signature": "description: ILocalizedString;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Description of the web part represented as a dictionary of locale keys to description values. This value will be displayed to the user in the toolbox. This description should be used in the Toolbox tooltip and other display areas."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The Web Part developer may give an initial description to the web part. The organization admin and page author will have the ability to change this description as per need."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: display the description of the web part in the toolbox tooltip, web part gallery and the page."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: a dictionary of locale keys to strings. Should always have a "
            },
            {
              "kind": "code",
              "text": "'default'",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " key."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"A tool for displaying neat information.\"",
              "highlighter": "plain"
            },
            {
              "kind": "code-box",
              "text": "         {\n           \"default\": \"A tool for displaying neat information.\",\n           \"en-us\": \"A tool for displaying neat information.\",\n           \"fr-fr\": \"Un outil d’affichage des informations soignées.\",\n           \"zh\": \"用於顯示整潔資訊的工具。\"\n         }\n",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "group": {
          "kind": "property",
          "signature": "group?: ILocalizedString;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The group name in web part picker to contain the web part in the classic page. If no value is provided, then the web part will be displayed in the Miscellaneous group."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "{ \"default\": \"Media and Content\" }",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "groupId": {
          "kind": "property",
          "signature": "groupId: PredefinedGroup | string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "PredefinedGroup | string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The group id to determine which modern group contains the web part in modern site page. The SharePoint Framework reserves group ids for predefined groups. The developer can pick one from those groups. If the developer fills an id not in the predefined groups, it falls back to Other group."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: the GUID from PredefinedGroup list"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"cf066440-0614-43d6-98ae-0b31cf14c7c3\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "iconImageUrl": {
          "kind": "property",
          "signature": "iconImageUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The icon for the web part, to be displayed in the toolbox, represented an image URL. The image at the URL must be exactly 40x28 px (SPPPLAT VSO#218660 to fix the size of the icon image)."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "If the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "IClientSideWebPartManifestEntry.officeFabricIconFontName"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-module-interfaces",
                "exportName": "IClientSideWebPartManifestEntry",
                "memberName": "officeFabricIconFontName"
              }
            },
            {
              "kind": "text",
              "text": " field does not have a value, this field must have a value. This value can be an absolute URL (e.g. "
            },
            {
              "kind": "code",
              "text": "\"http://example.com/icons/my-icon.png\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ") or a relative file path (e.g. "
            },
            {
              "kind": "code",
              "text": "\"./icons/my-icon.png\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": "). In the latter case, the path will be resolved relative to the folder containing the input manifest. The icon file will be copied to the deployment folder like an asset, and the output manifest’s iconImageUrl will be replaced with a URL relative to the URL used to load all other assets (the loaderConfig.internalModuleBaseUrls property)."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Any absolute URL."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"https://contoso.akamaihd.net/files/myWebpartIcon.png\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "officeFabricIconFontName": {
          "kind": "property",
          "signature": "officeFabricIconFontName?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The icon for the Web Part, to be displayed in the toolbox, represented as a character name in the Office 365 icon font file."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The icon font is specified here: "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "https://aka.ms/uifabric-icons"
                }
              ],
              "targetUrl": "https://aka.ms/uifabric-icons"
            },
            {
              "kind": "text",
              "text": " If this field has a value, the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "IClientSideWebPartManifestEntry.iconImageUrl"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-module-interfaces",
                "exportName": "IClientSideWebPartManifestEntry",
                "memberName": "iconImageUrl"
              }
            },
            {
              "kind": "text",
              "text": " field will be ignored."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Any character name in the Office 365 Icon Font."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: \"graph\""
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "properties": {
          "kind": "property",
          "signature": "properties: TProperties;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "TProperties",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Every web part is expected to have some custom properties. For example, an image web part might define properties for the image URL and caption text. A list web part may have the list ID and list title as its properties, and so on."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The SharePoint Framework passes these properties to the web parts when they are loaded. The web part developer fully controls the schema for these properties. The web part developer should follow versioning rules when updating the properties."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: rendering of the web part"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "{\"imageSource\": \"https://contoso.akamaihd.net/files/contosoLogo.jpg\", \"captionText\": \"Contoso logo\"}\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "tags": {
          "kind": "property",
          "signature": "tags?: ILocalizedString[];",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString[]",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This field is used to tag a web part with keywords that are different from the web part group name. Tags can be used for categorization and searching of web parts. For example, in the web part toolbox."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Example "
            },
            {
              "kind": "code",
              "text": "[{ \"default\": \"image\" }, { \"default\": \"media\" }, { \"default\": \"picture\" }, ...]",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "title": {
          "kind": "property",
          "signature": "title: ILocalizedString;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Title of the web part represented as a single a dictionary of locale keys to title values. This value will be displayed to the user in the toolbox."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This title should be used in the Toolbox and other display areas. The Web Part developer may give an initial title to the web part. The organization admin and page author will have the ability to change this title as per need."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: display the name of the web part in the toolbox, web part gallery and the page."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: a dictionary of locale keys to strings. Should always have a "
            },
            {
              "kind": "code",
              "text": "'default'",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " key."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"My Webpart\"",
              "highlighter": "plain"
            },
            {
              "kind": "code-box",
              "text": "         {\n           \"default\": \"My WebPart\"\n           \"en-us\": \"My WebPart\",\n           \"fr-fr\": \"Ma WebPart\",\n           \"zh\": \"我的 web 部件\"\n         }\n",
              "highlighter": "plain"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IClientSideWebPartManifestInstance": {
      "kind": "interface",
      "extends": "IClientSideComponentManifest",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Manifest that is relevant to a Web Part instance."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false
    },
    "ICommandDefinition": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Used by ICommandSetExtensionManifest, this defines a command to be displayed by a UI surface such as a menu, tool bar, etc."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "ariaLabel": {
          "kind": "property",
          "signature": "ariaLabel?: ILocalizedString;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Custom accessibility text for the browser's \"aria-label\" attribute. If omitted, the title property will be used by default. Example: \"Show information. Press ENTER to select.\""
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "iconImageUrl": {
          "kind": "property",
          "signature": "iconImageUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An optional URL for an image to be displayed next to the command. The requirements for this image are defined by the type of extension; some extension types may not display the image at all."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This value can be an absolute URL (e.g. \"http://example.com/icons/my-icon.png\") or a relative file path (e.g. \"./icons/my-icon.png\"). In the latter case, the path will be resolved relative to the folder containing the input manifest. The icon file will be copied to the deployment folder like an asset, and the output manifest’s iconImageUrl will be replaced with a URL relative to the URL used to load all other assets (the loaderConfig.internalModuleBaseUrls property)."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "title": {
          "kind": "property",
          "signature": "title: ILocalizedString;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ILocalizedString",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A short label to be displayed by the associated button, menu item, etc. Example: \"Show information\""
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "type": {
          "kind": "property",
          "signature": "type: 'command';",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "'command'",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Type of the item. Currently only \"command\" is allowed."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ICommandSetExtensionManifest": {
      "kind": "interface",
      "extends": "IClientSideExtensionManifest",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the manifest for a client-side extension that defines a set of custom commands that can be shown in a menu, tool bar, etc."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "extensionType": {
          "kind": "property",
          "signature": "extensionType: 'ListViewCommandSet';",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "'ListViewCommandSet'",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the type of client-side extension. Some extension types support additional manifest fields beyond SPClientSideExtensionManifest."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "items": {
          "kind": "property",
          "signature": "items:",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [itemId: string]: ICommandDefinition;\n    }",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A table of items defined by this command set. The object key is the Item ID."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The Item ID is a unique identifier that event handlers use to recognize the command The identifier must consist of upper-case letters, numbers, and underscores. Example: \"SHOW_INFO\""
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IComponentModuleConfiguration": {
      "kind": "interface",
      "extends": "IModuleConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the interface for a script module with the \"component\" type. Modules of this type will be provided via manifests. In order for the dependency to be loaded, the manifest must be available on the site."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "failoverPath": {
          "kind": "property",
          "signature": "failoverPath?: string | IPath;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | IPath",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A path to the framework-supplied component in case the framework fails to load the requested version."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This must be either a fully-qualified URL, or a path under the paths specified in the "
            },
            {
              "kind": "code",
              "text": "internalModuleBaseUrls",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field. If this field is not specified and the version is not available in the framework runtime, the closest matching version of the component will be provided instead."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: The path to the component either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"https://code.jquery.com/jquery-2.2.4.min.js\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "id": {
          "kind": "property",
          "signature": "id: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The ID of the framework-supplied component to be loaded."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: string representing a component's ID."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"0d910c1c-13b9-4e1c-9aa4-b008c5e42d7d\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "version": {
          "kind": "property",
          "signature": "version: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The version of the framework-supplied component to be loaded. For framework runtime component such as "
            },
            {
              "kind": "code",
              "text": "@microsoft/sp-client-base",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", it is recommended the version of the framework component the component was developed against be specified."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: string representing a "
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": " semantic version"
                }
              ],
              "targetUrl": "http://semver.org"
            },
            {
              "kind": "text",
              "text": ", or \"latest\"."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"2.2.4\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ILocalizedPathModuleConfiguration": {
      "kind": "interface",
      "extends": "IModuleConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the interface for a script module with the \"localizedPath\" type."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "Modules of this type must be provided by the component developer. These script resources are similar to those of the \"path\" type, but they may be present at a number of different paths, to be selected by the user's locale. Paths in this module type are loaded exactly the same way as \"internal\" modules are."
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "defaultPath": {
          "kind": "property",
          "signature": "defaultPath: string | IPath;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | IPath",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A path to this module's default locale javascript resource either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "If the user's locale does not resolve to one of the paths specified in the \"paths\" field, the path in this field is used. Paths in this module type are treated exactly the same way paths in modules of the \"internal\" type are treated."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: The path to the default locale version of the module either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application_strings_default_af378e0d.js\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "paths": {
          "kind": "property",
          "signature": "paths?:",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [locale: string]: string | IPath;\n    }",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This is a dictionary of locale keys (in the "
            },
            {
              "kind": "code",
              "text": "\"ll-cc\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " format) to paths to this module's locale javascript resource either as a fully-qualified URL or as a path under the paths provided in the "
            },
            {
              "kind": "code",
              "text": "\"internalModuleBaseUrls\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The loader will attempt to resolve the user's locale to one of the paths provided by this field, and will load the script resource under that path. If the user's locale does not resolve to one of the paths specified in this field, the path in "
            },
            {
              "kind": "code",
              "text": "\"defaultPath\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field is used. For example, if the user's locale is "
            },
            {
              "kind": "code",
              "text": "\"en-gb\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", and this field's value contains the keys "
            },
            {
              "kind": "code",
              "text": "[ \"en-us\", \"en-gb\", \"fr-fr\" ]",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the path specified by the "
            },
            {
              "kind": "code",
              "text": "\"en-gb\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " key will be used. If the user's locale is \"en-gb\", and this field's value contains the keys "
            },
            {
              "kind": "code",
              "text": "[ \"en-us\", \"fr-fr\" ]",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the path specified by the "
            },
            {
              "kind": "code",
              "text": "\"en-us\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " key will be used. If the user's locale is "
            },
            {
              "kind": "code",
              "text": "\"en-gb\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", and this field's value contains the keys "
            },
            {
              "kind": "code",
              "text": "[ \"es-es\", \"fr-fr\" ]",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the path specified by the \"defaultPath\" field will be used. Paths in this module type are treated exactly the same way paths in modules of the \"internal\" type are treated."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: A dictionary of locale-to-path mappings."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example:"
            },
            {
              "kind": "code-box",
              "text": " {\n   \"en-us\": \"master_2015-04-20/my-application_strings_en-us_d38ff012.js\",\n   \"fr-fr\": \"master_2015-04-20/my-application_strings_fr-fr_138af7e4.js\"\n }\n",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ILocalizedString": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "A set of localized strings."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "Supported values:"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- An Id referring to a localized resource. In this case it requires an 'id' key."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- A dictionary of locale keys to strings. In this case it requires a 'default' key."
        },
        {
          "kind": "code-box",
          "text": "Example 1: \"My Application\"\n         {\n           \"id\": \"$myStrings:myStrings.MyApplication;\"\n         }\nExample 2: \"My Application\"\n         {\n           \"default\": \"My Application\"\n           \"en-us\": \"My Application\",\n           \"fr-fr\": \"Ma demande\",\n           \"zh\": \"我的應用程式\"\n         }\n",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": "Notes on string ids:"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- Ids have the following structure: "
        },
        {
          "kind": "code",
          "text": "$<resourceName>:<expression>;",
          "highlighter": "plain"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "code",
          "text": "resourceName",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " needs to be a "
        },
        {
          "kind": "code",
          "text": "localizedResource",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " in the config.json."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "code",
          "text": "expression",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " is an expression that will be evaluated to access the string from the resource module."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "If your resource is a dictionary, access it through "
        },
        {
          "kind": "code",
          "text": "\"$resource:resource.MyString;\"",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " or "
        },
        {
          "kind": "code",
          "text": "\"$resource:resource[\\\"MyString\\\"];\"",
          "highlighter": "plain"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "For more complex cases, run an appropriate expression to access your resource and return the string."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__index": {
          "kind": "method",
          "signature": "[locale: string]: string | undefined;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string | undefined",
            "description": []
          },
          "parameters": {
            "locale": {
              "name": "locale",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "default": {
          "kind": "property",
          "signature": "default?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "id": {
          "kind": "property",
          "signature": "id?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IModuleConfiguration": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the base interface for a script module's definition."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "shouldNotPreload": {
          "kind": "property",
          "signature": "shouldNotPreload?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If set to "
            },
            {
              "kind": "code",
              "text": "true",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", this module should not be preloaded when loading the component."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The most common case for setting this property to \"true\" is when a module is defined in a manifest, but is not required for the module referenced in \"entryModuleId\" to load. Modules may be defined that are loaded asynchronously, and these modules do not need to be preloaded. This field implicitly defaults to "
            },
            {
              "kind": "code",
              "text": "false",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Usage: Instructs the module loader to not preload this module."
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "type": {
          "kind": "property",
          "signature": "type: 'component' | 'path' | 'localizedPath';",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "'component' | 'path' | 'localizedPath'",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The type of the script block. "
            },
            {
              "kind": "code",
              "text": "\"component\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " modules come from a component, "
            },
            {
              "kind": "code",
              "text": "\"path\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " and "
            },
            {
              "kind": "code",
              "text": "\"localizedPath\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " modules must be available on the paths provided in the "
            },
            {
              "kind": "code",
              "text": "\"internalModuleBaseUrls\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Modules with the "
            },
            {
              "kind": "code",
              "text": "\"path\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " type use the "
            },
            {
              "kind": "code",
              "text": "IPathModuleConfiguration",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " interface."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Modules with the "
            },
            {
              "kind": "code",
              "text": "\"component\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " type use the "
            },
            {
              "kind": "code",
              "text": "IComponentModuleConfiguration",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " interface. Modules with the \"localizedPath\" type use the "
            },
            {
              "kind": "code",
              "text": "ILocalizedPathModuleConfiguration",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " interface."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: "
            },
            {
              "kind": "code",
              "text": "\"component\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "code",
              "text": "\"path\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "code",
              "text": "\"localizedPath\"",
              "highlighter": "plain"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"localized\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IPath": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the base interface for a set of debug and non-debug/minimized paths. The paths in this object are loaded in exactly the same way as any other internal path."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "debug": {
          "kind": "property",
          "signature": "debug?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A path to this module's debug javascript resource either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field. The script referenced by this field is only loaded if it is present and debug scripts are explicitly requested."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: The path to the debug script either as a fully-qualified URL or as a path under the paths provided in the "
            },
            {
              "kind": "code",
              "text": "\"internalModuleBaseUrls\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application.bundle_18182c39.debug.js\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "default": {
          "kind": "property",
          "signature": "default: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A path to this module's javascript resource either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field. The script referenced by this field is loaded by default unless a debug version of the script is provided and explicitly requested."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Supported values: The path to the default/non-debug script either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IPathModuleConfiguration": {
      "kind": "interface",
      "extends": "IModuleConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the interface for a script module with the \"path\" type. Modules of this type must be provided by the component developer."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "globalDependencies": {
          "kind": "property",
          "signature": "globalDependencies?: string[];",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string[]",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "For non-AMD/module-pattern scripts that have dependencies (for example, jQuery plugins), the module loader will ensure that those dependencies are already loaded."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Entries in the array specified in this field must refer to other non-AMD modules in this component. This field is not required to have a value for non-AMD modules. If any values are specified that do not refer to other modules in the same component manifest that this module is specified, the module loader will throw an exception and the component will fail to load."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Names of other non-AMD-pattern modules in this loader configuration, as specified by the key "
            },
            {
              "kind": "code",
              "text": "IClientSideComponentLoaderConfiguration.scriptResources[]",
              "highlighter": "plain"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "[\"jquery\"]",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "globalName": {
          "kind": "property",
          "signature": "globalName?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If this property is specified, this module is considered non-AMD and the module loader will not expect \"define\" or \"require\" to be called."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "In order to load scripts that don't follow the AMD/module-pattern where \"define\" or \"require\" is called and dependencies are explicitly listed and exports are explicitly returned, the module loader needs to know which global variable must be examined. If this property is specified, this module is considered non-AMD and the module loader will not expect \"define\" or \"require\" to be called. Instead, it will wait for the script to finish loading and examine the global variable specified in this field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: Variable names that are expected to be populated after this module is loaded. For example, if this module is describing jQuery, this value should probably be \"$\". If an empty string is specified, the module loader will throw an exception and the component will fail to load."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"$\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "path": {
          "kind": "property",
          "signature": "path: string | IPath;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | IPath",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A path to this module's javascript resource either as a fully-qualified URL or as a path under the paths provided in the "
            },
            {
              "kind": "code",
              "text": "internalModuleBaseUrls",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "For example, if this field's value is "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " and the "
            },
            {
              "kind": "code",
              "text": "\"internalModuleBaseUrls\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " field's value is "
            },
            {
              "kind": "code",
              "text": "[ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ]",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ", the loader will first attempt to load this script resource from the URL "
            },
            {
              "kind": "code",
              "text": "\"https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ". If loading from that URL fails, the loader will then attempt to load this script resource from "
            },
            {
              "kind": "code",
              "text": "\"https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": ". If that URL fails to load, the component will fail to load and an error will be returned."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Supported values: The path to the module either as a fully-qualified URL or as a path under the paths provided in the \"internalModuleBaseUrls\" field."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example: "
            },
            {
              "kind": "code",
              "text": "\"master_2015-04-20/my-application.bundle_1928f8a0.js\"",
              "highlighter": "plain"
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "PredefinedGroup": {
      "kind": "enum",
      "values": {
        "BusinessAndIntelligence": {
          "kind": "enum value",
          "value": "\"4aca9e90-eff5-4fa1-bac7-728f5f157b66\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Business and intelligence."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts for tracking and analyzing data, and for integrating business flow with pages."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "CommunicationAndCollaboration": {
          "kind": "enum value",
          "value": "\"75e22ed5-fa14-4829-850a-c890608aca2d\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Communication and collaboration."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts that facilitate information sharing, team work, and social interactions."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "Discovery": {
          "kind": "enum value",
          "value": "\"1edbd9a8-0bfb-4aa2-9afd-14b8c45dd489\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Discovery."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts that organize, group, and filter content to help users discover information."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "Other": {
          "kind": "enum value",
          "value": "\"5c03119e-3074-46fd-976b-c60198311f70\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Other."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts not in other groups."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "PlanningAndProcess": {
          "kind": "enum value",
          "value": "\"1bc7927e-4a5e-4520-b540-71305c79c20a\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Planning and process."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts that empower team productivity with the use of planning and process tools."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "SiteTools": {
          "kind": "enum value",
          "value": "\"070951d7-94da-4db8-b06e-9d581f1f55b1\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Site tools."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts for site information and management."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "TextMediaAndContent": {
          "kind": "enum value",
          "value": "\"cf066440-0614-43d6-98ae-0b31cf14c7c3\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Text, media and content."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "This group includes web parts that display text, multi-media, documents, information from the web, and other rich content."
            }
          ],
          "remarks": [],
          "isBeta": true
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Predefined web part group."
        }
      ],
      "remarks": [],
      "isBeta": true
    }
  }
}
