var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { DialogContent, DialogFooter } from 'office-ui-fabric-react/lib/components/Dialog';
import * as React from 'react';
import * as ReactDom from 'react-dom';
import { _SPKillSwitch, Guid } from '@microsoft/sp-core-library';
import { autobind, PrimaryButton, Button, TextField } from '@microsoft/office-ui-fabric-react-bundle';
import BaseDialog from './BaseDialog';
/**
 * The React wrapper to use Fabric React components to render the prompt dialog
 */
var PromptDialogReact = /** @class */ (function (_super) {
    __extends(PromptDialogReact, _super);
    function PromptDialogReact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PromptDialogReact.isUseDefaultValueKillSwitchActivated = function () {
        return _SPKillSwitch.isActivated(Guid.parse('fdde2259-4142-4bc8-a756-ad9c6ac6c297'), '11/19/2019', 'UseDefaultValueInPromptDialogReact');
    };
    PromptDialogReact.prototype.render = function () {
        var _this = this;
        this._value = this.props.defaultValue;
        // Return the content of the dialog
        return React.createElement(DialogContent, { title: 'Prompt', subText: this.props.message },
            React.createElement(TextField, __assign({ componentRef: function (c) { return _this._textElement = c; }, onChange: this._onValueChanged, defaultValue: !PromptDialogReact.isUseDefaultValueKillSwitchActivated() ? this.props.defaultValue : undefined, value: !PromptDialogReact.isUseDefaultValueKillSwitchActivated() ? undefined : this.props.defaultValue, onKeyDown: this._onKeyDown }, { autoFocus: true } /* VSO:391730 Remove this workaround */)),
            React.createElement(DialogFooter, null,
                React.createElement(Button, { onClick: this.props.close, text: 'Cancel' }),
                React.createElement(PrimaryButton, { onClick: this._ok, text: 'OK' })));
    };
    PromptDialogReact.prototype.componentDidUpdate = function () {
        if (this._textElement) {
            this._textElement.focus();
        }
    };
    PromptDialogReact.prototype._onKeyDown = function (evt) {
        if (evt.keyCode === 13) { // Enter button pressed
            this._ok();
        }
        if (evt.keyCode === 27) { // Esc button pressed
            this.props.close();
        }
    };
    PromptDialogReact.prototype._ok = function () {
        this.props.resolve(this._value);
    };
    PromptDialogReact.prototype._onValueChanged = function (event, newValue) {
        this._value = newValue;
    };
    __decorate([
        autobind
    ], PromptDialogReact.prototype, "_onKeyDown", null);
    __decorate([
        autobind
    ], PromptDialogReact.prototype, "_ok", null);
    __decorate([
        autobind
    ], PromptDialogReact.prototype, "_onValueChanged", null);
    return PromptDialogReact;
}(React.Component));
/**
 * Internal implementation of a dialog to mimic browser's prompt() behavior.
 * Third-party can use this by calling the static method Dialog.prompt()
 *
 * @internal
 */
var PromptDialog = /** @class */ (function (_super) {
    __extends(PromptDialog, _super);
    function PromptDialog(message, resolve, defaultValue) {
        if (defaultValue === void 0) { defaultValue = ''; }
        var _this = _super.call(this, { isBlocking: true }) || this;
        _this._message = message;
        _this._defaultValue = defaultValue;
        _this._resolve = resolve;
        return _this;
    }
    PromptDialog.prototype.resolve = function (value) {
        var _this = this;
        this.close().then(function () {
            _this._resolve(value);
        });
    };
    PromptDialog.prototype.render = function () {
        ReactDom.render(React.createElement(PromptDialogReact, {
            message: this._message,
            defaultValue: this._defaultValue,
            close: this.close,
            resolve: this.resolve
        }), this.domElement);
    };
    PromptDialog.prototype.onAfterClose = function () {
        ReactDom.unmountComponentAtNode(this.domElement);
    };
    __decorate([
        autobind
    ], PromptDialog.prototype, "resolve", null);
    return PromptDialog;
}(BaseDialog));
export default PromptDialog;
//# sourceMappingURL=PromptDialog.js.map